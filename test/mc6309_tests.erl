-module(mc6309_tests).
-include_lib("eunit/include/eunit.hrl").

-include("reg_size.hrl").
-include("inter_reg_bits.hrl").

-define(PRINT, true).
-define(MATCH(EXPR), 			Status = try EXPR of _ -> true catch _:_ -> false end, ?assertEqual(true,Status)).

-define(SET_RESET(VALUE), 		fun(CPU) -> mc6309:cpu_set_reset(VALUE,CPU) end).
-define(SET_NMI(VALUE), 		fun(CPU) -> mc6309:cpu_set_nmi(VALUE,CPU) end).
-define(SET_SWI(VALUE), 		fun(CPU) -> mc6309:cpu_set_swi(VALUE,CPU) end).
-define(SET_IRQ(VALUE), 		fun(CPU) -> mc6309:cpu_set_irq(VALUE,CPU) end).
-define(SET_FIRQ(VALUE), 		fun(CPU) -> mc6309:cpu_set_firq(VALUE,CPU) end).
-define(SET_SWI2(VALUE), 		fun(CPU) -> mc6309:cpu_set_swi2(VALUE,CPU)  end).
-define(SET_SWI3(VALUE), 		fun(CPU) -> mc6309:cpu_set_swi3(VALUE,CPU)  end).
-define(SET_RESERVED(VALUE), 	fun(CPU) -> mc6309:cpu_set_reserved(VALUE,CPU)  end).
-define(SET_HALT(VALUE), 	    fun(CPU) -> mc6309:cpu_set_halt(VALUE,CPU)  end).
-define(SET_Q(VALUE), 	        fun(CPU) -> mc6309:cpu_set_q(VALUE,CPU)  end).
-define(SET_D(VALUE), 	        fun(CPU) -> mc6309:cpu_set_d(VALUE,CPU)  end).
-define(SET_W(VALUE), 	        fun(CPU) -> mc6309:cpu_set_w(VALUE,CPU)  end).
-define(SET_A(VALUE), 	        fun(CPU) -> mc6309:cpu_set_a(VALUE,CPU)  end).
-define(SET_B(VALUE), 	        fun(CPU) -> mc6309:cpu_set_b(VALUE,CPU)  end).
-define(SET_E(VALUE), 	        fun(CPU) -> mc6309:cpu_set_e(VALUE,CPU)  end).
-define(SET_F(VALUE), 	        fun(CPU) -> mc6309:cpu_set_f(VALUE,CPU)  end).
-define(SET_X(VALUE), 	        fun(CPU) -> mc6309:cpu_set_x(VALUE,CPU)  end).
-define(SET_Y(VALUE), 	        fun(CPU) -> mc6309:cpu_set_y(VALUE,CPU)  end).
-define(SET_U(VALUE), 	        fun(CPU) -> mc6309:cpu_set_u(VALUE,CPU)  end).
-define(SET_S(VALUE), 	        fun(CPU) -> mc6309:cpu_set_s(VALUE,CPU)  end).
-define(SET_PC(VALUE), 	        fun(CPU) -> mc6309:cpu_set_pc(VALUE,CPU)  end).
-define(SET_V(VALUE), 	        fun(CPU) -> mc6309:cpu_set_v(VALUE,CPU)  end).
-define(SET_ZERO(VALUE), 	    fun(CPU) -> mc6309:cpu_set_zero(VALUE,CPU)  end).
-define(SET_DP(VALUE), 	        fun(CPU) -> mc6309:cpu_set_dp(VALUE,CPU)  end).
-define(SET_CC(VALUE), 	        fun(CPU) -> mc6309:cpu_set_cc(VALUE,CPU)  end).
-define(SET_CC_E(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_e(VALUE,CPU)  end).
-define(SET_CC_F(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_f(VALUE,CPU)  end).
-define(SET_CC_H(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_h(VALUE,CPU)  end).
-define(SET_CC_I(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_i(VALUE,CPU)  end).
-define(SET_CC_N(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_n(VALUE,CPU)  end).
-define(SET_CC_Z(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_z(VALUE,CPU)  end).
-define(SET_CC_V(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_v(VALUE,CPU)  end).
-define(SET_CC_C(VALUE), 	    fun(CPU) -> mc6309:cpu_set_cc_c(VALUE,CPU)  end).
-define(SET_MD(VALUE), 	        fun(CPU) -> mc6309:cpu_set_md(VALUE,CPU)  end).
-define(SET_MD_DIV0(VALUE), 	fun(CPU) -> mc6309:cpu_set_md_div0(VALUE,CPU)  end).
-define(SET_MD_IL(VALUE), 	    fun(CPU) -> mc6309:cpu_set_md_il(VALUE,CPU)  end).
-define(SET_MD_FM(VALUE), 	    fun(CPU) -> mc6309:cpu_set_md_fm(VALUE,CPU)  end).
-define(SET_MD_NM(VALUE), 	    fun(CPU) -> mc6309:cpu_set_md_nm(VALUE,CPU)  end).

%%=============================================================================
%% Helper
%%=============================================================================
tester(Expected_Result,Actual,Print_Bool) ->

	case Print_Bool of
		true -> io:format("Expected:~p~nActual:~p~n",[Expected_Result,Actual]);
		1    -> io:format("Expected:~p~nActual:~p~n",[Expected_Result,Actual]);
		_    -> ok
	end,

	?assertEqual(Expected_Result,Actual).

%%=============================================================================
%% get_byte_pos(Data,Pos)
%%=============================================================================
get_byte_pos_1_test() ->

	Expected 	= <<65:8>>,
	Data 		= <<0:8,65:8,0:8>>,
	Pos 		= <<1:16>>,
	tester(Expected,mc6309:get_byte_pos(Data,Pos),?PRINT).

%%=============================================================================
%% cpu_clear()
%%=============================================================================
cpu_clear_1_test() ->

	Expected = <<
					% Q    X    Y    U    S    PC    V    Zero    DP   CC   MD
					  0:32,0:16,0:16,0:16,0:16,0:16, 0:16,0:16,   0:8, 0:8, 0:8, 

					% RESET NMI  SWI  IRQ  FIRQ  SWI2  SWI3 Reserved
					  1:1,  1:1, 0:1, 1:1, 1:1,  0:1,  0:1, 0:1,

					% Halt  spares
					  0:1,  0:7
				>>,
	tester(Expected,mc6309:cpu_clear(),?PRINT).

%%=============================================================================
%% cpu_get_q(CPU_Data)
%%=============================================================================
cpu_get_q_1_test() ->

	Expected = <<16#FFFF0000:32>>,
	CPU_Data = <<16#FFFF0000:32,0:64>>,
	tester(Expected,mc6309:cpu_get_q(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_d(CPU_Data)
%%=============================================================================
cpu_get_d_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#FFFF0000:32,0:64>>,
	tester(Expected,mc6309:cpu_get_d(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_a(CPU_Data)
%%=============================================================================
cpu_get_a_1_test() ->

	Expected = <<16#FF:8>>,
	CPU_Data = <<16#FF000000:32,0:64>>,
	tester(Expected,mc6309:cpu_get_a(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_b(CPU_Data)
%%=============================================================================
cpu_get_b_1_test() ->

	Expected = <<16#FF:8>>,
	CPU_Data = <<16#00FF0000:32,0:64>>,
	tester(Expected,mc6309:cpu_get_b(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_w(CPU_Data)
%%=============================================================================
cpu_get_w_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#0000FFFF:32,0:64>>,
	tester(Expected,mc6309:cpu_get_w(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_e(CPU_Data)
%%=============================================================================
cpu_get_e_1_test() ->

	Expected = <<16#FF:8>>,
	CPU_Data = <<16#0000FF00:32,0:64>>,
	tester(Expected,mc6309:cpu_get_e(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_f(CPU_Data)
%%=============================================================================
cpu_get_f_1_test() ->

	Expected = <<16#FF:8>>,
	CPU_Data = <<16#000000FF:32,0:64>>,
	tester(Expected,mc6309:cpu_get_f(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_x(CPU_Data)
%%=============================================================================
cpu_get_x_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,16#FFFF:16,0:64>>,
	tester(Expected,mc6309:cpu_get_x(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_y(CPU_Data)
%%=============================================================================
cpu_get_y_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,16#FFFF:16,0:64>>,
	tester(Expected,mc6309:cpu_get_y(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_u(CPU_Data)
%%=============================================================================
cpu_get_u_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,16#FFFF:16,0:64>>,
	tester(Expected,mc6309:cpu_get_u(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_s(CPU_Data)
%%=============================================================================
cpu_get_s_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,16#FFFF:16,0:64>>,
	tester(Expected,mc6309:cpu_get_s(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_pc(CPU_Data)
%%=============================================================================
cpu_get_pc_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,16#FFFF:16,0:64>>,
	tester(Expected,mc6309:cpu_get_pc(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_v(CPU_Data)
%%=============================================================================
cpu_get_v_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,16#FFFF:16,0:64>>,
	tester(Expected,mc6309:cpu_get_v(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_zero(CPU_Data)
%%=============================================================================
cpu_get_zero_1_test() ->

	Expected = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,16#FFFF:16,0:64>>,
	tester(Expected,mc6309:cpu_get_zero(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_dp(CPU_Data)
%%=============================================================================
cpu_get_dp_1_test() ->

	Expected = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,16#FF:8,0:64>>,
	tester(Expected,mc6309:cpu_get_dp(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc(CPU_Data)
%%=============================================================================
cpu_get_cc_1_test() ->

	Expected = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,16#FF:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_e(CPU_Data)
%%=============================================================================
cpu_get_cc_e_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#10000000:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_e(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_f(CPU_Data)
%%=============================================================================
cpu_get_cc_f_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#01000000:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_f(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_h(CPU_Data)
%%=============================================================================
cpu_get_cc_h_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00100000:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_h(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_i(CPU_Data)
%%=============================================================================
cpu_get_cc_i_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00010000:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_i(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_n(CPU_Data)
%%=============================================================================
cpu_get_cc_n_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00001000:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_n(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_z(CPU_Data)
%%=============================================================================
cpu_get_cc_z_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00000100:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_z(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_v(CPU_Data)
%%=============================================================================
cpu_get_cc_v_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00000010:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_v(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_cc_c(CPU_Data)
%%=============================================================================
cpu_get_cc_c_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00000001:8,0:64>>,
	tester(Expected,mc6309:cpu_get_cc_c(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_md(CPU_Data)
%%=============================================================================
cpu_get_md_1_test() ->

	Expected = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,16#FF:8,0:64>>,
	tester(Expected,mc6309:cpu_get_md(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_md_div0(CPU_Data)
%%=============================================================================
cpu_get_md_div0_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#10000000:8,0:64>>,
	tester(Expected,mc6309:cpu_get_md_div0(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_md_il(CPU_Data)
%%=============================================================================
cpu_get_md_il_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#01000000:8,0:64>>,
	tester(Expected,mc6309:cpu_get_md_il(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_md_fm(CPU_Data)
%%=============================================================================
cpu_get_md_fm_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#00000010:8,0:64>>,
	tester(Expected,mc6309:cpu_get_md_fm(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_md_nm(CPU_Data)
%%=============================================================================
cpu_get_md_nm_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#00000001:8,0:64>>,
	tester(Expected,mc6309:cpu_get_md_nm(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_reset(CPU_Data)
%%=============================================================================
cpu_get_reset_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_reset(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_nmi(CPU_Data)
%%=============================================================================
cpu_get_nmi_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_nmi(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_swi(CPU_Data)
%%=============================================================================
cpu_get_swi_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_swi(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_irq(CPU_Data)
%%=============================================================================
cpu_get_irq_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,0:1,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_irq(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_firq(CPU_Data)
%%=============================================================================
cpu_get_firq_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,0:1,0:1,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_firq(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_swi2(CPU_Data)
%%=============================================================================
cpu_get_swi2_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,0:1,0:1,0:1,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_swi2(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_swi3(CPU_Data)
%%=============================================================================
cpu_get_swi3_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,0:1,0:1,0:1,0:1,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_swi3(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_reserved(CPU_Data)
%%=============================================================================
cpu_get_reserved_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,0:1,0:1,0:1,0:1,0:1,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_reserved(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_get_halt(CPU_Data)
%%=============================================================================
cpu_get_halt_1_test() ->

	Expected = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,1:1,0:64>>,
	tester(Expected,mc6309:cpu_get_halt(CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_reset(Reset,CPU_Data)
%%=============================================================================
cpu_set_reset_1_test() ->

	Expected = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					1:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	Reset 		 = <<1:1>>,
	CPU_Data = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_reset(Reset,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_nmi(NMI,CPU_Data)
%%=============================================================================
cpu_set_nmi_1_test() ->

	Expected = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,1:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	NMI 	 = <<1:1>>,
	CPU_Data = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_nmi(NMI,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_swi(SWI,CPU_Data)
%%=============================================================================
cpu_set_swi_1_test() ->

	Expected = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,1:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	SWI 	 = <<1:1>>,
	CPU_Data = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_swi(SWI,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_irq(IRQ,CPU_Data)
%%=============================================================================
cpu_set_irq_1_test() ->

	Expected = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,1:1,0:1,0:1,0:1,0:1,
					0:1>>,
	IRQ 	 = <<1:1>>,
	CPU_Data = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_irq(IRQ,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_firq(FIRQ,CPU_Data)
%%=============================================================================
cpu_set_firq_1_test() ->

	Expected = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,1:1,0:1,0:1,0:1,
					0:1>>,
	FIRQ 	 = <<1:1>>,
	CPU_Data = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_firq(FIRQ,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_swi2(SWI2,CPU_Data)
%%=============================================================================
cpu_set_swi2_1_test() ->

	Expected = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,1:1,0:1,0:1,
					0:1>>,
	SWI2 	 = <<1:1>>,
	CPU_Data = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_swi2(SWI2,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_swi3(SWI2,CPU_Data)
%%=============================================================================
cpu_set_swi3_1_test() ->

	Expected = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,1:1,0:1,
					0:1>>,
	SWI3 	 = <<1:1>>,
	CPU_Data = <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_swi3(SWI3,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_reserved(Reserved,CPU_Data)
%%=============================================================================
cpu_set_reserved_1_test() ->

	Expected 	= <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,1:1,
					0:1>>,
	Reserved  	= <<1:1>>,
	CPU_Data 	= <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_reserved(Reserved,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_haslt(Halt,CPU_Data)
%%=============================================================================
cpu_set_halt_1_test() ->

	Expected 	= <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					1:1>>,
	Halt  		= <<1:1>>,
	CPU_Data 	= <<
					0:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8,
					0:1,0:1,0:1,0:1,0:1,0:1,0:1,0:1,
					0:1>>,
	tester(Expected,mc6309:cpu_set_halt(Halt,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_q(Q,CPU_Data)
%%=============================================================================
cpu_set_q_1_test() ->

	Expected = <<16#FFFFFFFF:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	Q 		 = <<16#FFFFFFFF:32>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_q(Q,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_d(D,CPU_Data)
%%=============================================================================
cpu_set_d_1_test() ->

	Expected = <<16#FFFF0000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	D 		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_d(D,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_w(W,CPU_Data)
%%=============================================================================
cpu_set_w_1_test() ->

	Expected = <<16#0000FFFF:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	W		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_w(W,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_a(A,CPU_Data)
%%=============================================================================
cpu_set_a_1_test() ->

	Expected = <<16#FF000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	A		 = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_a(A,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_b(B,CPU_Data)
%%=============================================================================
cpu_set_b_1_test() ->

	Expected = <<16#00FF0000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	B		 = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_b(B,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_e(E,CPU_Data)
%%=============================================================================
cpu_set_e_1_test() ->

	Expected = <<16#0000FF00:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	E		 = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_e(E,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_f(F,CPU_Data)
%%=============================================================================
cpu_set_f_1_test() ->

	Expected = <<16#000000FF:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	F		 = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_f(F,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_x(X,CPU_Data)
%%=============================================================================
cpu_set_x_1_test() ->

	Expected = <<16#00000000:32,16#FFFF:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	X		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_x(X,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_y(Y,CPU_Data)
%%=============================================================================
cpu_set_y_1_test() ->

	Expected = <<16#00000000:32,0:16,16#FFFF:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	Y		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_y(Y,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_u(U,CPU_Data)
%%=============================================================================
cpu_set_u_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,16#FFFF:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	U		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_u(U,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_s(S,CPU_Data)
%%=============================================================================
cpu_set_s_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,16#FFFF:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	S		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_s(S,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_pc(PC,CPU_Data)
%%=============================================================================
cpu_set_pc_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,16#FFFF:16,0:16,0:16,0:8,0:8,0:8>>,
	PC		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_pc(PC,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_v(V,CPU_Data)
%%=============================================================================
cpu_set_v_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,16#FFFF:16,0:16,0:8,0:8,0:8>>,
	V		 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_v(V,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_zero(Zero,CPU_Data)
%%=============================================================================
cpu_set_zero_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,16#FFFF:16,0:8,0:8,0:8>>,
	Zero	 = <<16#FFFF:16>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_zero(Zero,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_dp(DP,CPU_Data)
%%=============================================================================
cpu_set_dp_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,16#FF:8,0:8,0:8>>,
	DP 		 = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_dp(DP,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc(CC,CPU_Data)
%%=============================================================================
cpu_set_cc_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,16#FF:8,0:8>>,
	CC 		 = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc(CC,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_e(CC_E,CPU_Data)
%%=============================================================================
cpu_set_cc_e_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#10000000:8,0:8>>,
	CC_E     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_e(CC_E,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_f(CC_F,CPU_Data)
%%=============================================================================
cpu_set_cc_f_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#01000000:8,0:8>>,
	CC_F     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_f(CC_F,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_h(CC_H,CPU_Data)
%%=============================================================================
cpu_set_cc_h_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00100000:8,0:8>>,
	CC_H     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_h(CC_H,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_i(CC_I,CPU_Data)
%%=============================================================================
cpu_set_cc_i_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00010000:8,0:8>>,
	CC_I     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_i(CC_I,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_n(CC_N,CPU_Data)
%%=============================================================================
cpu_set_cc_n_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00001000:8,0:8>>,
	CC_N     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_n(CC_N,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_z(CC_Z,CPU_Data)
%%=============================================================================
cpu_set_cc_z_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00000100:8,0:8>>,
	CC_Z     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_z(CC_Z,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_v(CC_V,CPU_Data)
%%=============================================================================
cpu_set_cc_v_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00000010:8,0:8>>,
	CC_V     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_v(CC_V,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_cc_c(CC_C,CPU_Data)
%%=============================================================================
cpu_set_cc_c_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,2#00000001:8,0:8>>,
	CC_C     = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_cc_c(CC_C,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_md(MD,CPU_Data)
%%=============================================================================
cpu_set_md_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,16#FF:8>>,
	MD 		 = <<16#FF:8>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_md(MD,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_md_div0(MD_Div0,CPU_Data)
%%=============================================================================
cpu_set_md_div0_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#10000000:8>>,
	MD_Div0  = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_md_div0(MD_Div0,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_md_il(MD_IL,CPU_Data)
%%=============================================================================
cpu_set_md_il_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#01000000:8>>,
	MD_IL  	 = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_md_il(MD_IL,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_md_fm(MD_FM,CPU_Data)
%%=============================================================================
cpu_set_md_fm_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#00000010:8>>,
	MD_FM    = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_md_fm(MD_FM,CPU_Data),?PRINT).

%%=============================================================================
%% cpu_set_md_nm(MD_NM,CPU_Data)
%%=============================================================================
cpu_set_md_nm_1_test() ->

	Expected = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,2#00000001:8>>,
	MD_NM    = <<1:1>>,
	CPU_Data = <<16#00000000:32,0:16,0:16,0:16,0:16,0:16,0:16,0:16,0:8,0:8,0:8>>,
	tester(Expected,mc6309:cpu_set_md_nm(MD_NM,CPU_Data),?PRINT).

%%=============================================================================
%% immediate_1_address(Pos,Data,CPU_Data)
%%=============================================================================
immediate_1_address_1_test() ->

	Expected 	= {<<255>>, <<>>, <<2:16>>},
	Pos 	 	= <<1:16>>,
	Data 		= <<0, 255, 0, 0>>,
	CPU_Data 	= <<>>,
	tester(Expected,mc6309:immediate_1_address(Pos, Data, CPU_Data),?PRINT).

%%=============================================================================
%% immediate_2_address(Pos,Data,CPU_Data)
%%=============================================================================
immediate_2_address_1_test() ->

	Expected 	= {<<16#FFFF:16>>, <<>>, <<3:16>>},
	Pos 	 	= <<1:16>>,
	Data 		= <<0,255,255,0>>,
	CPU_Data 	= <<>>,
	tester(Expected,mc6309:immediate_2_address(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% direct_1_address(Pos,Data,CPU_Data)
%%=============================================================================
direct_1_address_1_test() ->

	Expected 	= {<<255:8>>, mc6309:cpu_clear(), <<2:16>>},
	Pos 		= <<1:16>>,
	Data 		= <<0,5,0,0,0,255,0,0,0>>,
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:direct_1_address(Pos, Data, CPU_Data),?PRINT).

%%=============================================================================
%% direct_2_address(Pos,Data,CPU_Data)
%%=============================================================================
direct_2_address_1_test() ->

	Expected 	= {<<16#FFFF:16>>, mc6309:cpu_clear(), <<2:16>>},
	Pos 		= <<1:16>>,
	Data 		= <<0,5,0,0,0,255,255,0,0>>,
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:direct_2_address(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% indexed_1_address(Pos,Data,CPU_Data)
%%=============================================================================
indexed_1_address_1_test() ->

	Expected 	= {<<255:8>>, mc6309:cpu_clear(), <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#00000001,255,0,0>>,
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_2_test() -> % Increment by 1 

	X1 			= mc6309:cpu_set_x(<<2:16>>, mc6309:cpu_clear()),

	Expected 	= {<<255:8>>,X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000000,255,0,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_3_test() -> % Increment by 2 (direct)

	X1 			= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),

	Expected 	= {<<255:8>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000001,255,0,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_3a_test() -> % Increment by 2 (indirect)

	X1 			= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),

	Expected 	= {<<255:8>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010001,0,3,255>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_4_test() -> % Decrease by 1

	X1 			= mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear()),

	Expected 	= {<<255:8>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000010,0,255,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_5_test() -> % Decrease by 2 (direct)

	X1 			= mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear()),

	Expected 	= {<<255:8>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000011,0,255,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_6_test() -> % Decrease by 2 (indirect)

	X1 			= mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear()),

	Expected 	= {<<255:8>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010011,0,0,4,255>>,
	CPU_Data 	= mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_7_test() -> % Zero-Offset Indexed (direct)

	X1 			= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),

	Expected 	= {<<255:8>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000100,255,0,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_8_test() -> % Zero-Offset Indexed (indirect)

	X1 			= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),

	Expected 	= {<<255:8>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010100,0,3,255>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_9_test() -> % B Register Offset (direct)

	CPU_Data 	= mc6309:cpu_set_b(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<255:8>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000101,255,0,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_10_test() -> % B Register Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_b(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<255:8>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010101,0,3,255,0,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_11_test() -> % A Register Offset (direct)

	CPU_Data 	= mc6309:cpu_set_a(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<255:8>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000110,255,0,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_12_test() -> % A Register Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_a(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<255:8>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010110,0,3,255,0,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_13_test() -> % 8 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001000,-1,255,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_14_test() -> % 8 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011000,-1,0,7,0,0,0,255>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_15_test() -> % 16 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001001,-1:16,255,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_16_test() -> % 16 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011001,-1:16,0,7,0,0,255>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_17_test() -> % D Register Offset (direct)

	CPU_Data 	= mc6309:cpu_set_d(<<-1:16/signed>>,mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear())),
	Expected 	= {<<255:8>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001011,0,0,255,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_18_test() -> % D Register Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_d(<<-1:16/signed>>,mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear())),
	Expected 	= {<<255:8>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011011,255,0,0,1>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_19_test() -> % PC 8 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_pc(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001100,-1,255,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_20_test() -> % PC 8 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_pc(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011100,-1,0,7,0,0,0,255>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_21_test() -> % PC 16 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_pc(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001101,-1:16,255,0>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_1_address_22_test() -> % PC 16 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_pc(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<255:8>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011101,-1:16,0,7,0,0,255>>,
	
	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

% Note: no direct extended address

%%-----------------------------------------------------------------------------
indexed_1_address_24_test() -> % Extended Address (indirect)

	CPU_Data 	= mc6309:cpu_clear(),
	Expected 	= {<<255:8>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011111,0,4,255,0,3>>,

	tester(Expected,mc6309:indexed_1_address(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% indexed_2_address(Pos,Data,CPU_Data)
%%=============================================================================
indexed_2_address_1_test() ->

	Expected 	= {<<16#FFFF:16>>, mc6309:cpu_clear(), <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#00000001,16#FFFF:16,0,0>>,
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_2_test() -> % Increment by 1 

	Expected 	= {
					<<12,34>>,
					mc6309:cpu_perform_actions(
					 								[
					 									?SET_X(<<2:16>>)
					 								]
					 						   ),
					<<1:16>>
				  },
	Pos 		= <<0:16>>,
	Data 		= <<2#10000000:8,12,34,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
					 								[
					 									?SET_X(<<1:16>>)
					 								]
					 						   ),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_3_test() -> % Increment by 2 (direct)

	X1 			= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),

	Expected 	= {<<16#FFFF:16>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000001,16#FFFF:16,0,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_3a_test() -> % Increment by 2 (indirect)

	X1 			= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),

	Expected 	= {<<16#FFFF:16>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010001,0,3,16#FFFF:16>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_4_test() -> % Decrease by 1

	X1 			= mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear()),

	Expected 	= {<<16#FFFF:16>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000010,0,16#FFFF:16,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_5_test() -> % Decrease by 2 (direct)

	X1 			= mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear()),

	Expected 	= {<<16#FFFF:16>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000011,0,16#FFFF:16,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_6_test() -> % Decrease by 2 (indirect)


	Expected 	= {
					<<16#FFFF:16>>,
					 mc6309:cpu_perform_actions(
					 								[
					 									?SET_X(<<2:16>>)
					 								]
					 						   ),
					 <<1:16>>
				  },
	Pos 		= <<0:16>>,
	Data 		= <<2#10010011,0,0,4,16#FFFF:16>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
					 								[
					 									?SET_X(<<4:16>>)
					 								]
					 						   ),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_7_test() -> % Zero-Offset Indexed (direct)

	X1 			= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),

	Expected 	= {<<16#FFFF:16>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000100,16#FFFF:16,0,0>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_8_test() -> % Zero-Offset Indexed (indirect)

	X1 			= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),

	Expected 	= {<<16#FFFF:16>>, X1, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010100,0,3,16#FFFF:16>>,
	CPU_Data 	= mc6309:cpu_set_x(<<1:16>>,mc6309:cpu_clear()),
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_9_test() -> % B Register Offset (direct)

	CPU_Data 	= mc6309:cpu_set_b(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000101,16#FFFF:16,0,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_10_test() -> % B Register Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_b(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010101,0,3,16#FFFF:16,0,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_11_test() -> % A Register Offset (direct)

	CPU_Data 	= mc6309:cpu_set_a(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10000110,16#FFFF:16,0,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_12_test() -> % A Register Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_a(<<-1:8/signed>>,mc6309:cpu_set_x(<<2:16>>,mc6309:cpu_clear())),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10010110,0,3,16#FFFF:16,0,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_13_test() -> % 8 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001000,-1,16#FFFF:16,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_14_test() -> % 8 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_x(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011000,-1,0,7,0,0,0,16#FFFF:16>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_15_test() -> % 16 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001001,-1:16,16#FFFF:16,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_16_test() -> % 16 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011001,-1:16,0,7,0,0,16#FFFF:16>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_17_test() -> % D Register Offset (direct)

	CPU_Data 	= mc6309:cpu_set_d(<<-1:16/signed>>,mc6309:cpu_set_x(<<4:16>>,mc6309:cpu_clear())),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001011,0,0,16#FFFF:16,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_18_test() -> % D Register Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_d(<<-1:16/signed>>,mc6309:cpu_set_x(<<5:16>>,mc6309:cpu_clear())),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<1:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011011,16#FFFF:16,0,0,1>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_19_test() -> % PC 8 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_pc(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001100,-1,16#FFFF:16,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_20_test() -> % PC 8 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_pc(<<3:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<2:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011100,-1,0,7,0,0,0,16#FFFF:16>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_21_test() -> % PC 16 Bit Offset (direct)

	CPU_Data 	= mc6309:cpu_set_pc(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10001101,-1:16,16#FFFF:16,0>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
indexed_2_address_22_test() -> % PC 16 Bit Offset (indirect)

	CPU_Data 	= mc6309:cpu_set_pc(<<4:16>>,mc6309:cpu_clear()),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011101,-1:16,0,7,0,0,16#FFFF:16>>,
	
	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%% Note: not extended address direct

%%-----------------------------------------------------------------------------
indexed_2_address_24_test() -> % Extended Address (indirect)

	CPU_Data 	= mc6309:cpu_clear(),
	Expected 	= {<<16#FFFF:16>>, CPU_Data, <<3:16>>},
	Pos 		= <<0:16>>,
	Data 		= <<2#10011111,0,5,16#FFFF:16,0,3>>,

	tester(Expected,mc6309:indexed_2_address(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% pc_1_inc(CPU_Data)
%%=============================================================================
pc_1_inc_1_test() ->

	Expected 	= mc6309:cpu_set_pc(<<1:16>>,mc6309:cpu_clear()),
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:pc_1_inc(CPU_Data),?PRINT).

%%=============================================================================
%% pc_2_inc(CPU_Data)
%%=============================================================================
pc_2_inc_1_test() ->

	Expected 	= mc6309:cpu_set_pc(<<2:16>>,mc6309:cpu_clear()),
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:pc_2_inc(CPU_Data),?PRINT).

%%=============================================================================
%% check_cc_status_update(Map,CPU_Data,Key,Fun)
%%=============================================================================
check_cc_status_update_1_test() ->

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:1>>)
												]
											),
	Map 		= #{
						c => 1,
						e => 1
				   },

	CPU_Data 	= mc6309:cpu_clear(),

	Key 		= c,
	Fun 		= fun mc6309:cpu_set_cc_c/2,
	tester(Expected,mc6309:check_cc_status_update(Map,CPU_Data,Key,Fun),?PRINT).

%%-----------------------------------------------------------------------------
check_cc_status_update_2_test() ->

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_E(<<1:1>>)
												]
										    ),
	Map 		= #{
						c => 1,
						e => 1
				   },
	CPU_Data 	= mc6309:cpu_clear(),
	Key 		= e,
	Fun 		= fun mc6309:cpu_set_cc_e/2,
	tester(Expected,mc6309:check_cc_status_update(Map,CPU_Data,Key,Fun),?PRINT).

%%-----------------------------------------------------------------------------
check_cc_status_update_3_test() ->

	Expected 	= mc6309:cpu_perform_actions(
												[
												]
										    ),
	Map 		= #{
						c => 1,
						e => 1
				   },
	CPU_Data 	= mc6309:cpu_clear(),
	Key 		= f,
	Fun 		= fun mc6309:cpu_set_cc_e/2,
	tester(Expected,mc6309:check_cc_status_update(Map,CPU_Data,Key,Fun),?PRINT).

%%=============================================================================
%% update_condition_codes_from_map(Map,CPU_Data)
%%=============================================================================
update_condition_codes_from_map_1_test() ->

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:1>>),
													?SET_CC_E(<<1:1>>),
													?SET_CC_F(<<1:1>>)
												]
										    ),
	Map 		= #{
						c => 1,
						e => 1,
						f => 1
				   },
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:update_condition_codes_from_map(Map,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
update_condition_codes_from_map_2_test() ->

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_E(<<1:1>>),
													?SET_CC_F(<<1:1>>),
													?SET_CC_H(<<1:1>>),
													?SET_CC_I(<<1:1>>),
													?SET_CC_N(<<1:1>>),
													?SET_CC_Z(<<1:1>>),
													?SET_CC_V(<<1:1>>),
													?SET_CC_C(<<1:1>>)
												]
										    ),
	Map 		= #{
						e => 1,
						f => 1,
						h => 1,
						i => 1,
						n => 1,
						z => 1,
						v => 1,
						c => 1
				   },
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:update_condition_codes_from_map(Map,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
update_condition_codes_from_map_3_test() ->

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_E(<<1:1>>),
													?SET_CC_F(<<0:1>>),
													?SET_CC_H(<<1:1>>),
													?SET_CC_I(<<0:1>>),
													?SET_CC_N(<<1:1>>),
													?SET_CC_Z(<<0:1>>),
													?SET_CC_V(<<1:1>>),
													?SET_CC_C(<<0:1>>)
												]
										    ),
	Map 		= #{
						e => 1,
						f => 0,
						h => 1,
						i => 0,
						n => 1,
						z => 0,
						v => 1,
						c => 0
				   },
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:update_condition_codes_from_map(Map,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
update_condition_codes_from_map_4_test() ->

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_E(<<0:1>>),
													?SET_CC_F(<<1:1>>),
													?SET_CC_H(<<0:1>>),
													?SET_CC_I(<<1:1>>),
													?SET_CC_N(<<0:1>>),
													?SET_CC_Z(<<1:1>>),
													?SET_CC_V(<<0:1>>),
													?SET_CC_C(<<1:1>>)
												]
										    ),
	Map 		= #{
						e => 0,
						f => 1,
						h => 0,
						i => 1,
						n => 0,
						z => 1,
						v => 0,
						c => 1
				   },
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:update_condition_codes_from_map(Map,CPU_Data),?PRINT).

%%=============================================================================
%% abx_inherent_3a(Pos, Data, CPU_Data) 
%%=============================================================================
abx_inherent_3a_1_test() -> 

	Expected    = {
					<<>>,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<255:8>>),
													?SET_X(<<255:16>>),
													?SET_PC(<<1:16>>)
												]
											  )
				 }, 
	Pos			= <<0:16>>,
	Data 		= <<>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<255:8>>)
												]
											),
	tester(Expected, mc6309:abx_inherent_3a(Pos, Data, CPU_Data), ?PRINT).

%%-----------------------------------------------------------------------------
abx_inherent_3a_2_test() -> 

	Expected    = {
					<<>>,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:8>>),
													?SET_X(<<2:16>>),
													?SET_PC(<<1:16>>)
												]
											  )
				 }, 
	Pos			= <<0:16>>,
	Data 		= <<>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:8>>),
													?SET_X(<<1:16>>)
												]
											),
	tester(Expected,mc6309:abx_inherent_3a(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
abx_inherent_3a_3_test() -> 

	Expected    = {
					<<>>,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<16#FF:8>>),
													?SET_X(<<16#311A:16>>),
													?SET_PC(<<1:16>>)
												]
											  )
				 }, 
	Pos			= <<0:16>>,
	Data 		= <<>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<16#FF:8>>),
													?SET_X(<<16#301B:16>>)
												]
											),
	tester(Expected,mc6309:abx_inherent_3a(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adca_immediate_89(Pos,Data,CPU_Data)
%%=============================================================================
adca_immediate_89_1_test() ->

	Expected 	= {
					<< 16#89, 1>>,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:8>>),
													?SET_PC(<<2:16>>)
												]
									        )
				 },
	Pos 		= <<0:16>>,
	Data 		= << 16#89, 1 >>,
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:adca_immediate_89(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
adca_immediate_89_2_test() ->

	Expected 	= {
					<< 16#89, 1 >>,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2:8>>),
													?SET_PC(<<2:16>>)
												]
									        )
				  },
	Pos 		= <<0:16>>,
	Data 		= << 16#89, 1 >>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:1>>)
												]
									        ),
	tester(Expected,mc6309:adca_immediate_89(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
adca_immediate_89_3_test() ->

	Expected 	= {
					<< 16#89, 254>>,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<0:8>>),
													?SET_PC(<<2:16>>),
													?SET_CC_H(<<1:1>>),
													?SET_CC_Z(<<1:1>>),
													?SET_CC_C(<<1:1>>)
												]
											)
				  },
	Pos 		= <<0:16>>,
	Data 		= << 16#89, 254>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:8>>),
													?SET_CC_C(<<1:1>>)
												]
											),
	tester(Expected,mc6309:adca_immediate_89(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adca_direct_99(Pos,Data,CPU_Data)
%%=============================================================================
adca_direct_99_1_test() ->

	Expected 	= {
						<< 16#99, 5, 0, 0, 0, 5>>,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<7:?SIZE_A>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
				   },
	Pos 		= <<0:16>>,
	Data 		= << 16#99, 5, 0, 0, 0, 5>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:?SIZE_A>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adca_direct_99(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adca_indexed_a9(Pos,Data,CPU_Data)
%%=============================================================================
adca_indexed_a9_1_test() ->

	Post_Byte = mc6309:post_byte_indexed_no_offset_r_direct(x),

	Expected 	= {
					<<16#A9,Post_Byte/binary,1>>,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<3:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#A9,Post_Byte/binary,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adca_indexed_a9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adca_extended_b9(Pos,Data,CPU_Data)
%%=============================================================================
adca_extended_b9_1_test() ->

	Post_Byte = mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	%%index: 		 0   , 1,2,3,          4,5,6
	Data 		= <<16#B9,Post_Byte/binary,0,6,1>>,
	

	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<3:?SIZE_A>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											)
				  },
	
	Pos 		= <<0:?SIZE_ADDRESS>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:?SIZE_A>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adca_extended_b9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adcb_immediate_c9(Pos,Data,CPU_Data)
%%=============================================================================
adcb_immediate_c9_1_test() ->

	Expected 	= {
					<< 16#89, 1>>,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:8>>),
													?SET_PC(<<2:16>>)
												]
									        )
				 },
	Pos 		= <<0:16>>,
	Data 		= << 16#89, 1 >>,
	CPU_Data 	= mc6309:cpu_clear(),
	tester(Expected,mc6309:adcb_immediate_c9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adcb_direct_d9(Pos,Data,CPU_Data)
%%=============================================================================
adcb_direct_d9_1_test() ->

	Expected 	= {
						<< 16#99, 5, 0, 0, 0, 5>>,
						mc6309:cpu_perform_actions(
													[
														?SET_B(<<7:?SIZE_B>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
				   },
	Pos 		= <<0:16>>,
	Data 		= << 16#99, 5, 0, 0, 0, 5>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:?SIZE_B>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adcb_direct_d9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adcb_indexed_e9(Pos,Data,CPU_Data)
%%=============================================================================
adcb_indexed_e9_1_test() ->

	Post_Byte = mc6309:post_byte_indexed_no_offset_r_direct(x),

	Data 		= <<16#E9,Post_Byte/binary,1>>,

	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<3:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adcb_indexed_e9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adcb_extended_f9(Pos,Data,CPU_Data)
%%=============================================================================
adcb_extended_f9_1_test() ->

	Post_Byte = mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	%%index: 		 0   , 1,2,3,          4,5,6
	Data 		= <<16#F9,Post_Byte/binary,0,6,1>>,
	

	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<3:?SIZE_B>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											)
				  },
	
	Pos 		= <<0:?SIZE_ADDRESS>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:?SIZE_B>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adcb_extended_f9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adc_generic_part(
%					Pos,
%					Data,
%					New_CPU_Data,
%					Memory_Byte,
%					Get_Reg_Fun,
%					Set_Reg_Fun,
%					New_Pos
%				)
%%=============================================================================
adc_generic_part_1_test() ->

	Expected 		= {
						<<>>,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<7:8>>),
														?SET_PC(<<1:16>>)
													]
												  )
					  },
	Pos 			= not_used,
	Data 			= <<>>,
	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<1:8>>),
														?SET_CC_C(<<1:1>>)
													]
		 									    ),
	Memory_Byte 	= <<16#05:8>>,
	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,
	Set_Reg_Fun 	= fun mc6309:cpu_set_a/2,
	New_Pos 		= <<16#01:16>>,
	tester(Expected,mc6309:adc_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Byte,
												Get_Reg_Fun,
												Set_Reg_Fun,
												New_Pos
											),?PRINT).

%%=============================================================================
%% cpu_perform_actions(Fun_List)
%%=============================================================================
cpu_perform_actions_1_test() ->
	
	Fun_List 	= [
					?SET_A(<<16#01:8>>),
					?SET_B(<<16#02:8>>),
					?SET_E(<<16#03:8>>),
					?SET_F(<<16#04:8>>),
					?SET_X(<<16#10:16>>),
					?SET_Y(<<16#20:16>>),
					?SET_CC(<<16#FF:8>>)
				  ],
	Result 		= mc6309:cpu_perform_actions(Fun_List),

	?MATCH(	  
			<<  %=========================================================================|
				% |-----------------------Q----------------------|
				% |-----------D-----------|----------W-----------|  
				% |-----A-----|----B------|----E-----|----F------|                      
			    	16#01:8,    16#02:8,    16#03:8,   16#04:8,
				% |-----------X-----------|
				        	16#10:16,
				% |-----------Y-----------|
				        	16#20:16,
				% |-----------U-----------|
				            _:16,
				% |-----------S-----------|
				            _:16,
				% |-----------PC----------|
				            _:16,
				% |-----------V-----------|
				            _:16,
				% |---------ZERO----------|
				            _:16, 
				% |----DP-----|                      
			    	_:8,
				% |----CC-----|
				% |--E--|--F--|--H--|--I--|--N--|--Z--|--V--|--C--|                      
			    	1:1,  1:1,  1:1,  1:1,  1:1,  1:1,  1:1,  1:1, 
				% |----MD-----|
				% |-div0--|--il---|-------|-------|--------|--------|--FM----|--NM--------|                      
			    	_:1,    _:1,    _:1,    _:1,    _:1,     _:1,     _:1,     _:1,
			    % |-reset-|--nmi--|--swi--|--irq--|--firq--|--swi2--|--swi3--|--reserved--| 
				    _:1,    _:1,    _:1,    _:1,    _:1,     _:1,     _:1,     _:1,
				% |-halt--|-------|-------|-------|--------|--------|--------|------------|
				    _:1,    _:1,    _:1,    _:1,    _:1,     _:1,     _:1,     _:1
			>> %=========================================================================|
			= Result
		).

%%=============================================================================
%% adcd_immediate_1089(Pos,Data,CPU_Data)
%%=============================================================================
adcd_immediate_1089_1_test() ->

	Expected 	= {
						<<16#10,16#89,0,16#FF,0,0>>,
						mc6309:cpu_perform_actions(
													[
														?SET_D(<<1,0>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#89,0,16#FF,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adcd_immediate_1089(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
adcd_immediate_1089_2_test() ->

	Expected 	= {
						<<16#10,16#89,0,16#FF,0,0>>,
						mc6309:cpu_perform_actions(
													[
														?SET_D(<<1,0>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#89,0,16#FF,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_D(<<1:?SIZE_D>>)
												]
											),
	tester(Expected,mc6309:adcd_immediate_1089(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
adcd_immediate_1089_3_test() ->

	Expected 	= {
						<<16#10,16#89,0,16#FF,0,0>>,
						mc6309:cpu_perform_actions(
													[
														?SET_D(<<16#FF:?SIZE_D>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#89,0,16#FF,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_D(<<0:?SIZE_D>>)
												]
											),
	tester(Expected,mc6309:adcd_immediate_1089(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adcd_direct_1099(Pos,Data,CPU_Data)
%%=============================================================================
adcd_direct_1099_1_test() ->

	Expected 	= {
					<<16#10, 16#99, 16#4, 16#0, 16#0, 16#FF>>,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_D(<<16#0100:?SIZE_D>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10, 16#99, 16#4, 16#0, 16#0, 16#FF>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adcd_direct_1099(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adcd_indexed_10a9(Pos,Data,CPU_Data)
%%=============================================================================
adcd_indexed_10a9_1_test() -> 

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),
	Expected 	= {
					<<16#10,16#A9,Post_Byte/binary,0,1>>,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_D(<<2:?SIZE_D>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	
	Data 		= <<16#10,16#A9,Post_Byte/binary,0,1>>,

	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_X(<<3:?SIZE_X>>)
												]
											),
	tester(Expected,mc6309:adcd_indexed_10a9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adcd_extended_10b9(Pos,Data,CPU_Data)
%%=============================================================================
adcd_extended_10b9_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>), %% This is 3 bytes

	Expected 	= {
					<<16#10,16#B9,Post_Byte/binary,0,7,0,1>>,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2:?SIZE_D>>),
													?SET_PC(<<5:?SIZE_PC>>)
												]
											)
				  },
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#B9,Post_Byte/binary,0,7,0,1>>,
					%0     1     2,3,4           5,6,7,8,9,10

	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	tester(Expected,mc6309:adcd_extended_10b9(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%%	adcd_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						New_Pos
%				 	 )
%%=============================================================================
adcd_generic_part_1_test() ->

	Expected 		= {
							<<>>,
							mc6309:cpu_perform_actions(
															[
																fun(CPU) -> mc6309:cpu_set_d(<<2:16>>,CPU) end,
																fun(CPU) -> mc6309:cpu_set_pc(<<1:16>>,CPU) end
															]
													  )
					   },
	Pos 			= not_used,
	Data 			= <<>>,
	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														fun(CPU) -> mc6309:cpu_set_d(<<1:16>>,CPU) end
													]
												),
	Memory_Data 	= <<1:16>>, 	
	New_Pos 		= <<1:16>>,
	tester(Expected,mc6309:adcd_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												New_Pos
											 ),?PRINT).

%%=============================================================================
%% constant_offset_from_r_5_bit_offset_direct(
%												Pos,
%												Data,
%												CPU_Data,
%												Number_Of_Bytes
%									      	)
%%=============================================================================
constant_offset_from_r_5_bit_offset_direct_1_test() ->

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),

	Expected 			= {
							<<10:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#00000001:8,0,0,0,0,10>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes		= 1,
	tester(Expected,mc6309:constant_offset_from_r_5_bit_offset_direct(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																      ),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_5_bit_offset_direct_2_test() ->

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),

	Expected 			= {
							<<10:8,20:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#00000001:8,0,0,0,0,10,20>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes		= 2,
	tester(Expected,mc6309:constant_offset_from_r_5_bit_offset_direct(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																      ),?PRINT).

%%=============================================================================
%% constant_offset_from_r_no_offset(
%										Pos,
%										Data,
%										CPU_Data,
%										Number_Of_Bytes
%									)
%%=============================================================================
constant_offset_from_r_no_offset_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<6:8>>,
							CPU,
							<<1:16>>
				  		  },

	Pos 				= <<0:16>>,
	Data 				= <<2#10000100,0,0,0,0,6>>,
	CPU_Data  			= CPU,
	Number_Of_Bytes		= 1,
	tester(Expected,mc6309:constant_offset_from_r_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_no_offset_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<6:8,7:8>>,
							CPU,
							<<1:16>>
				  		  },

	Pos 				= <<0:16>>,
	Data 				= <<2#10000100,0,0,0,0,6,7>>,
	CPU_Data  			= CPU,
	Number_Of_Bytes		= 2,
	tester(Expected,mc6309:constant_offset_from_r_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_no_offset_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<6:8>>,
							CPU,
							<<1:16>>
				  		  },

	Pos 				= <<0:16>>,
	Data 				= <<2#10010100,6,0,0,0,0,1>>,
	CPU_Data  			= CPU,
	Number_Of_Bytes		= 1,
	tester(Expected,mc6309:constant_offset_from_r_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_no_offset_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<6:8,7:8>>,
							CPU,
							<<1:16>>
				  		  },

	Pos 				= <<0:16>>,
	Data 				= <<2#10010100,6,7,0,0,0,1>>,
	CPU_Data  			= CPU,
	Number_Of_Bytes		= 2,
	tester(Expected,mc6309:constant_offset_from_r_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%=============================================================================
%% constant_offset_from_r_8_bit_offset(
%										Pos,
%										Data,
%										CPU_Data,
%										Number_Of_Bytes
%									  )
%%=============================================================================
constant_offset_from_r_8_bit_offset_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<33>>,
							CPU,
							<<2:16>>
						  },
	Pos 				= <<0:16>>, 
	Data 				= <<2#10001001,0,5,0,0,33>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_r_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_8_bit_offset_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<33,34>>,
							CPU,
							<<2:16>>
						  },
	Pos 				= <<0:16>>, 
	Data 				= <<2#10001001,0,5,0,0,33,34>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_r_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_8_bit_offset_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<33>>,
							CPU,
							<<2:16>>
						  },
	Pos 				= <<0:16>>, 
	Data 				= <<2#10011001,0,5,33,0,0,3>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_r_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_8_bit_offset_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
							<<33,34>>,
							CPU,
							<<2:16>>
						  },
	Pos 				= <<0:16>>, 
	Data 				= <<2#10011001,0,5,33,34,0,3>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_r_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%%	constant_offset_from_r_16_bit_offset(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
constant_offset_from_r_16_bit_offset_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
								<<44:8>>,
								CPU,
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001001,0,1,0,0,0,44>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_r_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_16_bit_offset_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
								<<44:8,55:8>>,
								CPU,
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001001,0,1,0,0,0,44,55>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_r_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_16_bit_offset_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
								<<44:8>>,
								CPU,
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011001,0,1,44,0,0,0,3>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_r_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_16_bit_offset_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<5:16>>)
														]
													),

	Expected 			= {
								<<44:8,55:8>>,
								CPU,
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011001,0,1,44,55,0,0,3>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_r_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%% constant_offset_from_w_no_offset(
% 										Pos,
%										Data,
%										CPU_Data,
%										Number_Of_Bytes
%									)
%%=============================================================================
constant_offset_from_w_no_offset_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<5:16>>)
														]
													),

	Expected 			= {
							<<44:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001111,0,0,0,0,44>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:constant_offset_from_w_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_w_no_offset_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<5:16>>)
														]
													),

	Expected 			= {
							<<44:8,55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001111,0,0,0,0,44,55>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:constant_offset_from_w_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_w_no_offset_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<5:16>>)
														]
													),

	Expected 			= {
							<<44:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010000,0,0,44,0,0,3>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:constant_offset_from_w_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).


%%-----------------------------------------------------------------------------
constant_offset_from_w_no_offset_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<5:16>>)
														]
													),

	Expected 			= {
							<<44:8,55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010000,0,0,44,55,0,3>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:constant_offset_from_w_no_offset(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%=============================================================================
%% constant_offset_from_w_16_bit_offset(
% 											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
constant_offset_from_w_16_bit_offset_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													), 

	Expected 			= {
							<<55:8>>,
							CPU,
							<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10101111,0,1,0,0,55>>,
	CPU_Data 			= CPU, 
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:constant_offset_from_w_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_w_16_bit_offset_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													), 

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10101111,0,1,0,0,55,66>>,
	CPU_Data 			= CPU, 
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:constant_offset_from_w_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_w_16_bit_offset_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													), 

	Expected 			= {
							<<55:8>>,
							CPU,
							<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10110000,0,1,55,0,0,3>>,
	CPU_Data 			= CPU, 
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:constant_offset_from_w_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_w_16_bit_offset_4_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													), 

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10110000,0,1,55,66,0,3>>,
	CPU_Data 			= CPU, 
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:constant_offset_from_w_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_a_accumulator(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
accumulator_offset_from_r_a_accumulator_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_A(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000110,0,0,0,0,55>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_a_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_a_accumulator_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_A(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000110,0,0,0,0,55,66>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_a_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_a_accumulator_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_A(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010110,0,55,0,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_a_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_a_accumulator_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_A(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010110,0,55,66,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_a_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_b_accumulator(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
accumulator_offset_from_r_b_accumulator_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_B(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<44:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000101,0,0,0,0,44>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_b_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_b_accumulator_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_B(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000110,0,0,0,0,55,66>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_b_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_b_accumulator_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_B(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010110,0,55,0,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_b_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_b_accumulator_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_B(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010110,0,55,66,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_b_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%=============================================================================
%% auto_increment_of_r_post_increment_by_1(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
auto_increment_of_r_post_increment_by_1_1_test() -> % 1 octet, direct

	Expected 			= {
							<<44:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<3:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000000,0,44,0,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_1(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%------------------------------------------------------------------------------
auto_increment_of_r_post_increment_by_1_2_test() -> % 2 octet, direct

	Expected 			= {
							<<44:8,55:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<3:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000000,0,44,55,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_1(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%% Note: indirect not allowed

%%=============================================================================
%% auto_increment_of_r_post_increment_by_2(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
auto_increment_of_r_post_increment_by_2_1_test() -> % 1 octet, direct

	Expected 			= {
							<<44:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000001,0,44,55,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%------------------------------------------------------------------------------
auto_increment_of_r_post_increment_by_2_2_test() -> % 2 octet, direct

	Expected 			= {
							<<44:8,55:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000001,0,44,55,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%------------------------------------------------------------------------------
auto_increment_of_r_post_increment_by_2_3_test() -> % 1 octet, indirect

	Expected 			= {
							<<44:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<6:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010001,0,44,55,0,2>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%------------------------------------------------------------------------------
auto_increment_of_r_post_increment_by_2_4_test() -> % 2 octet, indirect

	Expected 			= {
							<<44:8,55:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<6:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010001,0,44,55,0,2>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%% auto_decrement_of_r_pre_decrement_by_1(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
auto_decrement_of_r_pre_decrement_by_1_1_test() -> % 1 octet, direct

	Expected 			= {
							<<44:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000010,0,44,0,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<3:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_1(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%------------------------------------------------------------------------------
auto_decrement_of_r_pre_decrement_by_1_2_test() -> % 2 octet, direct

	Expected 			= {
							<<44:8,55:8>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000010,0,44,55,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<3:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_1(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%% Note: indirect not allowed

%%=============================================================================
%% auto_decrement_of_r_pre_decrement_by_2(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
auto_decrement_of_r_pre_decrement_by_2_1_test() ->  % 1 octet, direct

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000011,0,44,55,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_r_pre_decrement_by_2_2_test() ->  % 2 octet, direct

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000011,0,44,55,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_r_pre_decrement_by_2_3_test() ->  % 1 octet, indirect

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010011,0,0,4,44,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_r_pre_decrement_by_2_4_test() ->  % 2 octet, indirect

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010011,0,0,4,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%% auto_increment_of_w_post_increment_by_2(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
auto_increment_of_w_post_increment_by_2_1_test() -> % 1 octet, direct

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11001111,0,0,0,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_increment_of_w_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_increment_of_w_post_increment_by_2_2_test() -> % 2 octet, direct

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11001111,0,0,0,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_increment_of_w_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_increment_of_w_post_increment_by_2_3_test() -> % 1 octet, indirect

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11010000,0,44,0,0,2>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_increment_of_w_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_increment_of_w_post_increment_by_2_4_test() -> % 2 octet, indirect

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11010000,0,44,55,0,2>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_increment_of_w_post_increment_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%% auto_decrement_of_w_pre_decrement_by_2(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
auto_decrement_of_w_pre_decrement_by_2_1_test() ->

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11101111,0,0,0,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_decrement_of_w_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_w_pre_decrement_by_2_2_test() -> % 2 octet, direct

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11101111,0,0,0,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_decrement_of_w_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_w_pre_decrement_by_2_3_test() -> % 1 octet, indirect

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11110000,0,0,0,0,6,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:auto_decrement_of_w_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_w_pre_decrement_by_2_4_test() -> % 1 octet, indirect

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#11110000,0,0,0,0,6,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<6:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:auto_decrement_of_w_pre_decrement_by_2(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_d_accumulator(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
accumulator_offset_from_r_d_accumulator_1_test() ->

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001011,0,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:accumulator_offset_from_r_d_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_d_accumulator_2_test() -> % 2 octet, direct

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001011,0,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:accumulator_offset_from_r_d_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_d_accumulator_3_test() -> % 1 octet, indirect

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011011,0,0,4,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:accumulator_offset_from_r_d_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_d_accumulator_4_test() -> % 2 octet, indirect

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011011,0,0,4,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_D(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:accumulator_offset_from_r_d_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%=============================================================================
%% constant_offset_from_pc_8_bit_offset(
%										Pos,
%										Data,
%										CPU_Data,
%										Number_Of_Bytes
%									)
%%=============================================================================
constant_offset_from_pc_8_bit_offset_1_test() -> % 1 octet, direct

	Expected 			= {
								<<44>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<2:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001100,1,0,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_pc_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_8_bit_offset_2_test() -> % 2 octet, direct

	Expected 			= {
								<<44,55>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<2:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001100,1,0,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_pc_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_8_bit_offset_3_test() -> % 1 octet, indirect

	Expected 			= {
								<<44>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<2:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011100,1,0,0,6,0,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_pc_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_8_bit_offset_4_test() -> % 2 octet, indirect

	Expected 			= {
								<<44,55>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<2:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011100,1,0,0,6,0,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_pc_8_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																),?PRINT).

%%=============================================================================
%% constant_offset_from_pc_16_bit_offset(
%										Pos,
%										Data,
%										CPU_Data,
%										Number_Of_Bytes
%									 )
%%=============================================================================
constant_offset_from_pc_16_bit_offset_1_test() -> % 1 octet, direct

	Expected 			= {
								<<44>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001101,0,1,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_pc_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																 ),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_16_bit_offset_2_test() -> % 2 octet, direct

	Expected 			= {
								<<44,55>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001101,0,1,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_pc_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																 ),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_16_bit_offset_3_test() -> % 1 octet, indirect

	Expected 			= {
								<<44>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011101,0,1,0,5,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:constant_offset_from_pc_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																 ),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_16_bit_offset_4_test() -> % 2 octet, indirect

	Expected 			= {
								<<44,55>>,
								mc6309:cpu_perform_actions(
															[
																?SET_PC(<<2:16>>)
															]
														),
								<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011101,0,1,0,5,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<2:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:constant_offset_from_pc_16_bit_offset(
																	Pos,
																	Data,
																	CPU_Data,
																	Number_Of_Bytes
																 ),?PRINT).

%%=============================================================================
%% extended_indirect_16_bit_address(
%										Pos,
%										Data,
%										CPU_Data,
%										Number_Of_Bytes
%								   )
%%=============================================================================
extended_indirect_16_bit_address_1_test() -> % 1 octet, indirect

	Expected 			= {
							<<44>>,
							mc6309:cpu_clear(),
							<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011111,0,3,0,6,0,44>>,
	CPU_Data 		    = mc6309:cpu_clear(),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:extended_indirect_16_bit_address(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).

%%-----------------------------------------------------------------------------
extended_indirect_16_bit_address_2_test() -> % 2 octet, indirect

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_clear(),
							<<3:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011111,0,3,0,6,0,44,55>>,
	CPU_Data 		    = mc6309:cpu_clear(),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:extended_indirect_16_bit_address(
																Pos,
																Data,
																CPU_Data,
																Number_Of_Bytes
															),?PRINT).


%%=============================================================================
%% rr_from_r(R)
%%=============================================================================
rr_from_r_1_test() ->

	Expected 	= <<0:1,0:1>>,
	R 			= x,
	tester(Expected,mc6309:rr_from_r(R),?PRINT).

%%-----------------------------------------------------------------------------
rr_from_r_2_test() ->

	Expected 	= <<0:1,1:1>>,
	R 			= y,
	tester(Expected,mc6309:rr_from_r(R),?PRINT).

%%-----------------------------------------------------------------------------
rr_from_r_3_test() ->

	Expected 	= <<1:1,0:1>>,
	R 			= u,
	tester(Expected,mc6309:rr_from_r(R),?PRINT).

%%-----------------------------------------------------------------------------
rr_from_r_4_test() ->

	Expected 	= <<1:1,1:1>>,
	R 			= s,
	tester(Expected,mc6309:rr_from_r(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_no_offset_r_direct(R)
%%=============================================================================
post_byte_indexed_no_offset_r_direct_1_test() ->

	Expected 	= <<2#10000100:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_no_offset_r_direct(R),?PRINT).

%%-----------------------------------------------------------------------------
post_byte_indexed_no_offset_r_direct_2_test() ->

	Expected 	= <<2#11100100:8>>,
	R 			= s,
	tester(Expected,mc6309:post_byte_indexed_no_offset_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_no_offset_r_indirect(R)
%%=============================================================================
post_byte_indexed_no_offset_r_indirect_1_test() ->

	Expected 	= <<2#10010100:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_no_offset_r_indirect(R),?PRINT).

%%-----------------------------------------------------------------------------
post_byte_indexed_no_offset_r_indirect_2_test() ->

	Expected 	= <<2#11110100:8>>,
	R 			= s,
	tester(Expected,mc6309:post_byte_indexed_no_offset_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_5_offset_r_direct(R,Offset)
%%=============================================================================
post_byte_indexed_5_offset_r_direct_1_test() ->

	Expected 	= <<2#00000001>>,
	R 			= x,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_indexed_5_offset_r_direct(R,Offset),?PRINT).

%%-----------------------------------------------------------------------------
post_byte_indexed_5_offset_r_direct_2_test() ->

	Expected 	= <<2#00011111>>,
	R 			= x,
	Offset 		= -1,
	tester(Expected,mc6309:post_byte_indexed_5_offset_r_direct(R,Offset),?PRINT).

%%=============================================================================
%% post_byte_indexed_8_offset_r_direct(R,Offset)
%%=============================================================================
post_byte_indexed_8_offset_r_direct_1_test() ->

	Expected 	= <<2#10001000:8,1:8>>,
	R 			= x,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_indexed_8_offset_r_direct(R,Offset),?PRINT).

%%-----------------------------------------------------------------------------
post_byte_indexed_8_offset_r_direct_2_test() ->

	Expected 	= <<2#10001000:8,2#11111111:8>>,
	R 			= x,
	Offset 		= -1,
	tester(Expected,mc6309:post_byte_indexed_8_offset_r_direct(R,Offset),?PRINT).

%%=============================================================================
%% post_byte_indexed_8_offset_r_indirect(R,Offset)
%%=============================================================================
post_byte_indexed_8_offset_r_indirect_1_test() ->

	Expected 	= <<2#10011000:8,1:8>>,
	R 			= x,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_indexed_8_offset_r_indirect(R,Offset),?PRINT).

%%-----------------------------------------------------------------------------
post_byte_indexed_8_offset_r_indirect_2_test() ->

	Expected 	= <<2#10011000:8,2#11111111:8>>,
	R 			= x,
	Offset 		= -1,
	tester(Expected,mc6309:post_byte_indexed_8_offset_r_indirect(R,Offset),?PRINT).

%%=============================================================================
%% post_byte_indexed_16_offset_r_direct(R,Offset)
%%=============================================================================
post_byte_indexed_16_offset_r_direct_1_test() ->

	Expected 	= <<2#10001001:8,1:16>>,
	R 			= x,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_indexed_16_offset_r_direct(R,Offset),?PRINT).

%%-----------------------------------------------------------------------------
post_byte_indexed_16_offset_r_direct_2_test() ->

	Expected 	= <<2#10001001:8,-1:16/signed>>,
	R 			= x,
	Offset 		= -1,
	tester(Expected,mc6309:post_byte_indexed_16_offset_r_direct(R,Offset),?PRINT).

%%=============================================================================
%% post_byte_indexed_16_offset_r_indirect(R,Offset)
%%=============================================================================
post_byte_indexed_16_offset_r_indirect_1_test() ->

	Expected 	= <<2#10011001:8,1:16>>,
	R 			= x,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_indexed_16_offset_r_indirect(R,Offset),?PRINT).

%%-----------------------------------------------------------------------------
post_byte_indexed_16_offset_r_indirect_2_test() ->

	Expected 	= <<2#10011001:8,-1:16/signed>>,
	R 			= x,
	Offset 		= -1,
	tester(Expected,mc6309:post_byte_indexed_16_offset_r_indirect(R,Offset),?PRINT).

%%=============================================================================
%% post_byte_indexed_no_offset_w_direct()
%%=============================================================================
post_byte_indexed_no_offset_w_direct_1_test() ->

	Expected = << 1:1, 0:1, 0:1, 0:1, 1:1, 1:1, 1:1, 1:1 >>,
	tester(Expected,mc6309:post_byte_indexed_no_offset_w_direct(),?PRINT).

%%=============================================================================
%% post_byte_indexed_no_offset_w_indirect()
%%=============================================================================
post_byte_indexed_no_offset_w_indirect_1_test() ->

	Expected = << 1:1, 0:1, 0:1, 1:1, 0:1, 0:1, 0:1, 0:1 >>,
	tester(Expected,mc6309:post_byte_indexed_no_offset_w_indirect(),?PRINT).

%%=============================================================================
%% post_byte_indexed_16_offset_w_direct(Offset)
%%=============================================================================
post_byte_indexed_16_offset_w_direct_1_test() ->

	Expected 	= << 2#10101111:8,1:16/signed>>,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_indexed_16_offset_w_direct(Offset),?PRINT).

%%=============================================================================
%% post_byte_indexed_16_offset_w_indirect(Offset)
%%=============================================================================
post_byte_indexed_16_offset_w_indirect_1_test() ->

	Expected 	= << 2#10110000,1:16/signed>>,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_indexed_16_offset_w_indirect(Offset),?PRINT).

%%=============================================================================
%% post_byte_indexed_a_offset_r_direct(R)
%%=============================================================================
post_byte_indexed_a_offset_r_direct_1_test() ->

	Expected 	= <<2#10000110:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_a_offset_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_a_offset_r_indirect(R)
%%=============================================================================
post_byte_indexed_a_offset_r_indirect_1_test() ->

	Expected 	= <<2#10010110:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_a_offset_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_b_offset_r_direct(R)
%%=============================================================================
post_byte_indexed_b_offset_r_direct_1_test() ->

	Expected 	= <<2#10000101:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_b_offset_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_b_offset_r_indirect(R)
%%=============================================================================
post_byte_indexed_b_offset_r_indirect_1_test() ->

	Expected 	= <<2#10010101:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_b_offset_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_d_offset_r_direct(R)
%%=============================================================================
post_byte_indexed_d_offset_r_direct_1_test() ->

	Expected 	= <<2#10001011:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_d_offset_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_d_offset_r_indirect(R)
%%=============================================================================
post_byte_indexed_d_offset_r_indirect_1_test() ->

	Expected 	= <<2#10011011:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_d_offset_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_e_offset_r_direct(R)
%%=============================================================================
post_byte_indexed_e_offset_r_direct_1_test() ->

	Expected 	= <<2#10000111:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_e_offset_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_e_offset_r_indirect(R)
%%=============================================================================
post_byte_indexed_e_offset_r_indirect_1_test() ->

	Expected 	= <<2#10010111:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_e_offset_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_f_offset_r_direct(R)
%%=============================================================================
post_byte_indexed_f_offset_r_direct_1_test() ->

	Expected 	= <<2#10001010:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_f_offset_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_f_offset_r_indirect(R)
%%=============================================================================
post_byte_indexed_f_offset_r_indirect_1_test() ->

	Expected 	= <<2#10011010:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_f_offset_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_w_offset_r_direct(R)
%%=============================================================================
post_byte_indexed_w_offset_r_direct_1_test() ->

	Expected 	= <<2#10001110:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_w_offset_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_indexed_w_offset_r_indirect(R)
%%=============================================================================
post_byte_indexed_w_offset_r_indirect_1_test() ->

	Expected 	= <<2#10011110:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_indexed_w_offset_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_post_increment_1_r_direct(R)
%%=============================================================================
post_byte_post_increment_1_r_direct_1_test() ->

	Expected 	= <<2#10000000:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_post_increment_1_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_post_increment_2_r_direct(R)
%%=============================================================================
post_byte_post_increment_2_r_direct_1_test() ->

	Expected 	= <<2#10000001:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_post_increment_2_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_post_increment_2_r_indirect(R)
%%=============================================================================
post_byte_post_increment_2_r_indirect_1_test() ->

	Expected 	= <<2#10010001:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_post_increment_2_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_pre_decrement_1_r_direct(R)
%%=============================================================================
post_byte_pre_decrement_1_r_direct_1_test() ->

	Expected 	= <<2#10000010:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_pre_decrement_1_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_pre_decrement_2_r_direct(R)
%%=============================================================================
post_byte_pre_decrement_2_r_direct_1_test() ->

	Expected 	= <<2#10000011:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_pre_decrement_2_r_direct(R),?PRINT).

%%=============================================================================
%% post_byte_pre_decrement_2_r_indirect(R)
%%=============================================================================
post_byte_pre_decrement_2_r_indirect_1_test() ->

	Expected 	= <<2#10010011:8>>,
	R 			= x,
	tester(Expected,mc6309:post_byte_pre_decrement_2_r_indirect(R),?PRINT).

%%=============================================================================
%% post_byte_post_increment_2_w_direct()
%%=============================================================================
post_byte_post_increment_2_w_direct_1_test() ->

	Expected 	= <<2#11001111:8>>,
	tester(Expected,mc6309:post_byte_post_increment_2_w_direct(),?PRINT).

%%=============================================================================
%% post_byte_post_increment_2_w_indirect()
%%=============================================================================
post_byte_post_increment_2_w_indirect_1_test() ->

	Expected 	= <<2#11010000:8>>,
	tester(Expected,mc6309:post_byte_post_increment_2_w_indirect(),?PRINT).

%%=============================================================================
%% post_byte_pre_decrement_2_w_direct()
%%=============================================================================
post_byte_pre_decrement_2_w_direct_1_test() ->

	Expected 	= << 2#11101111>>,
	tester(Expected,mc6309:post_byte_pre_decrement_2_w_direct(),?PRINT).

%%=============================================================================
%% post_byte_pre_decrement_2_w_indirect()
%%=============================================================================
post_byte_pre_decrement_2_w_indirect_1_test() ->

	Expected 	= << 2#11110000>>,
	tester(Expected,mc6309:post_byte_pre_decrement_2_w_indirect(),?PRINT).

%%=============================================================================
%% post_byte_8_offset_pc_direct(Offset)
%%=============================================================================
post_byte_8_offset_pc_direct_1_test() ->

	Expected 	= <<2#10001100,1/signed>>,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_8_offset_pc_direct(Offset),?PRINT).

%%=============================================================================
%% post_byte_8_offset_pc_indirect(Offset)
%%=============================================================================
post_byte_8_offset_pc_indirect_1_test() ->

	Expected 	= <<2#10011100,1/signed>>,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_8_offset_pc_indirect(Offset),?PRINT).

%%=============================================================================
%% post_byte_16_offset_pc_direct(Offset)
%%=============================================================================
post_byte_16_offset_pc_direct_1_test() ->

	Expected 	= <<2#10001101,1:16/signed>>,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_16_offset_pc_direct(Offset),?PRINT).

%%=============================================================================
%% post_byte_16_offset_pc_indirect(Offset)
%%=============================================================================
post_byte_16_offset_pc_indirect_1_test() ->

	Expected 	= <<2#10011101,1:16/signed>>,
	Offset 		= 1,
	tester(Expected,mc6309:post_byte_16_offset_pc_indirect(Offset),?PRINT).

%%=============================================================================
%% post_byte_extended_16_address_indirect(Address)
%%=============================================================================
post_byte_extended_16_address_indirect_1_test() ->

	Expected    = <<2#10011111,1:16>>,
	Address  	= <<1:16>>,
	tester(Expected,mc6309:post_byte_extended_16_address_indirect(Address),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_w_accumulator(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
accumulator_offset_from_r_w_accumulator_1_test() ->

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001110,0,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:accumulator_offset_from_r_w_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_w_accumulator_2_test() -> % 2 octet, direct

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001110,0,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:accumulator_offset_from_r_w_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_w_accumulator_3_test() -> % 1 octet, indirect

	Expected 			= {
							<<44>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011110,0,0,4,44>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 1,
	tester(Expected,mc6309:accumulator_offset_from_r_w_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_w_accumulator_4_test() -> % 2 octet, indirect

	Expected 			= {
							<<44,55>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011110,0,0,4,44,55>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:16>>),
															?SET_X(<<1:16>>)
														]
													),
	Number_Of_Bytes 	= 2,
	tester(Expected,mc6309:accumulator_offset_from_r_w_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_e_accumulator(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
accumulator_offset_from_r_e_accumulator_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_E(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000111,0,0,0,0,55>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_e_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_e_accumulator_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_E(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10000111,0,0,0,0,55,66>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_e_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_e_accumulator_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_E(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010111,0,55,0,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_e_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_e_accumulator_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_E(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10010111,0,55,66,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_e_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_f_accumulator(
%											Pos,
%											Data,
%											CPU_Data,
%											Number_Of_Bytes
%										)
%%=============================================================================
accumulator_offset_from_r_f_accumulator_1_test() -> % 1 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_F(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001010,0,0,0,0,55>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_f_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_f_accumulator_2_test() -> % 2 octet, direct

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_F(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10001010,0,0,0,0,55,66>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_f_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_f_accumulator_3_test() -> % 1 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_F(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011010,0,55,0,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 1,

	tester(Expected,mc6309:accumulator_offset_from_r_f_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_f_accumulator_4_test() -> % 2 octet, indirect

	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_F(<<3:8>>),
															?SET_X(<<2:16>>)
														]
													),

	Expected 			= {
							<<55:8,66:8>>,
							CPU,
							<<1:16>>
						  },
	Pos 				= <<0:16>>,
	Data 				= <<2#10011010,0,55,66,0,0,2>>,
	CPU_Data 			= CPU,
	Number_Of_Bytes 	= 2,

	tester(Expected,mc6309:accumulator_offset_from_r_f_accumulator(
																		Pos,
																		Data,
																		CPU_Data,
																		Number_Of_Bytes
																	),?PRINT).

%%=============================================================================
%% decode_inter_register_bits(Bits)
%%=============================================================================
decode_inter_register_bits_1_test() ->

	Expected 	= d,
	Bits 		= <<2#0000:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_2_test() ->

	Expected 	= x,
	Bits 		= <<2#0001:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_3_test() ->

	Expected 	= y,
	Bits 		= <<2#0010:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_4_test() ->

	Expected 	= u,
	Bits 		= <<2#0011:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_5_test() ->

	Expected 	= s,
	Bits 		= <<2#0100:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_6_test() ->

	Expected 	= pc,
	Bits 		= <<2#0101:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_7_test() ->

	Expected 	= w,
	Bits 		= <<2#0110:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_8_test() ->

	Expected 	= v,
	Bits 		= <<2#0111:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_9_test() ->

	Expected 	= a,
	Bits 		= <<2#1000:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_10_test() ->

	Expected 	= b,
	Bits 		= <<2#1001:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_11_test() ->

	Expected 	= cc,
	Bits 		= <<2#1010:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_12_test() ->

	Expected 	= dp,
	Bits 		= <<2#1011:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_13_test() ->

	Expected 	= zero,
	Bits 		= <<2#1100:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_14_test() ->

	Expected 	= zero,
	Bits 		= <<2#1101:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_15_test() ->

	Expected 	= e,
	Bits 		= <<2#1110:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_bits_16_test() ->

	Expected 	= f,
	Bits 		= <<2#1111:4>>,
	tester(Expected,mc6309:decode_inter_register_bits(Bits),?PRINT).

%%=============================================================================
%% decode_inter_register_post_byte(Post_Byte)
%%=============================================================================
decode_inter_register_post_byte_1_test() ->

	Expected 	= {d,d},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_D:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_2_test() ->

	Expected 	= {d,x},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_X:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_3_test() ->

	Expected 	= {d,y},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_Y:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_4_test() ->

	Expected 	= {d,u},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_U:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_5_test() ->

	Expected 	= {d,s},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_S:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_6_test() ->

	Expected 	= {d,pc},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_PC:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_7_test() ->

	Expected 	= {d,w},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_W:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_8_test() ->

	Expected 	= {d,v},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_V:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_9_test() ->

	Expected 	= {d,a},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_A:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_10_test() ->

	Expected 	= {d,b},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_B:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_11_test() ->

	Expected 	= {d,zero},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_ZERO_1:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_12_test() ->

	Expected 	= {d,zero},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_ZERO_2:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_13_test() ->

	Expected 	= {d,e},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_E:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_post_byte_14_test() ->

	Expected 	= {d,f},
	Post_Byte 	= <<?INTER_REG_BITS_D:4, ?INTER_REG_BITS_F:4>>,
	tester(Expected,mc6309:decode_inter_register_post_byte(Post_Byte),?PRINT).

%%=============================================================================
%% get_lower_8_reg_16(Reg_16_Binary)
%%=============================================================================
get_lower_8_reg_16_1_test() ->

	Expected 		= <<16#AA:8>>,
	Reg_16_Binary   = <<16#FF:8,16#AA:8>>,
	tester(Expected,mc6309:get_lower_8_reg_16(Reg_16_Binary),?PRINT).

%%=============================================================================
%% decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU)
%%=============================================================================
decode_inter_register_actual_source_1_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= d,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_D(<<16#FFFF:?SIZE_D>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_2_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= w,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<16#FFFF:?SIZE_W>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_3_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= x,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<16#00FF:?SIZE_X>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_4_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= y,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_Y(<<16#00FF:?SIZE_Y>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_5_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= u,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_U(<<16#00FF:?SIZE_U>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_6_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= s,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_S(<<16#00FF:?SIZE_S>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_7_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= pc,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<16#00FF:?SIZE_PC>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_8_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= v,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_V(<<16#00FF:?SIZE_V>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_9_test() ->

	Expected 			= <<255:8>>,
	Source_Reg 			= zero,
	Destination_Size 	= 8,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_ZERO(<<16#00FF:?SIZE_ZERO>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_10_test() ->

	Expected 			= <<16#FF00:16>>,
	Source_Reg 			= a,
	Destination_Size 	= 16,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_D(<<16#FF00:?SIZE_D>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_11_test() ->

	Expected 			= <<16#FF00:16>>,
	Source_Reg 			= b,
	Destination_Size 	= 16,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_D(<<16#FF00:?SIZE_D>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_12_test() ->

	Expected 			= <<16#FF00:16>>,
	Source_Reg 			= e,
	Destination_Size 	= 16,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<16#FF00:?SIZE_W>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_13_test() ->

	Expected 			= <<16#FF00:16>>,
	Source_Reg 			= f,
	Destination_Size 	= 16,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<16#FF00:?SIZE_W>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_14_test() ->

	Expected 			= <<16#00FF:16>>,
	Source_Reg 			= cc,
	Destination_Size 	= 16,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_CC(<<16#FF:?SIZE_CC>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_15_test() ->

	Expected 			= <<16#FF00:16>>,
	Source_Reg 			= dp,
	Destination_Size 	= 16,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_DP(<<16#FF:?SIZE_DP>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_16_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= d,
	Destination_Size 	= ?SIZE_D,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_D(<<16#FFFF:?SIZE_D>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_17_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= w,
	Destination_Size 	= ?SIZE_W,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_W(<<16#FFFF:?SIZE_W>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_18_test() ->

	Expected 			= <<16#FF:8>>,
	Source_Reg 			= a,
	Destination_Size 	= ?SIZE_A,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_A(<<16#FF:?SIZE_A>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_19_test() ->

	Expected 			= <<16#FF:8>>,
	Source_Reg 			= b,
	Destination_Size 	= ?SIZE_B,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_B(<<16#FF:?SIZE_B>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_20_test() ->

	Expected 			= <<16#FF:8>>,
	Source_Reg 			= e,
	Destination_Size 	= ?SIZE_E,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_E(<<16#FF:?SIZE_E>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_21_test() ->

	Expected 			= <<16#FF:8>>,
	Source_Reg 			= f,
	Destination_Size 	= ?SIZE_F,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_F(<<16#FF:?SIZE_F>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_22_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= x,
	Destination_Size 	= ?SIZE_X,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_X(<<16#FFFF:?SIZE_X>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_23_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= y,
	Destination_Size 	= ?SIZE_Y,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_Y(<<16#FFFF:?SIZE_Y>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_24_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= u,
	Destination_Size 	= ?SIZE_U,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_U(<<16#FFFF:?SIZE_U>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_25_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= s,
	Destination_Size 	= ?SIZE_S,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_S(<<16#FFFF:?SIZE_S>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_26_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= pc,
	Destination_Size 	= ?SIZE_PC,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<16#FFFF:?SIZE_PC>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_27_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= v,
	Destination_Size 	= ?SIZE_V,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_V(<<16#FFFF:?SIZE_V>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_28_test() ->

	Expected 			= <<16#FFFF:16>>,
	Source_Reg 			= zero,
	Destination_Size 	= ?SIZE_ZERO,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_ZERO(<<16#FFFF:?SIZE_ZERO>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_29_test() ->

	Expected 			= <<16#FF:8>>,
	Source_Reg 			= dp,
	Destination_Size 	= ?SIZE_DP,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_DP(<<16#FF:?SIZE_DP>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%-----------------------------------------------------------------------------
decode_inter_register_actual_source_30_test() ->

	Expected 			= <<16#FF:8>>,
	Source_Reg 			= cc,
	Destination_Size 	= ?SIZE_CC,
	CPU 				= mc6309:cpu_perform_actions(
														[
															?SET_CC(<<16#FF:?SIZE_CC>>)
														]
													),
	tester(Expected,mc6309:decode_inter_register_actual_source(Source_Reg,Destination_Size,CPU),?PRINT).

%%=============================================================================
%% get_size_of_register(Reg)
%%=============================================================================
get_size_of_register_1_test() ->

	Expected 	= 32,
	Reg 		= q,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_2_test() ->

	Expected 	= 16,
	Reg 		= d,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_3_test() ->

	Expected 	= 16,
	Reg 		= w,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_4_test() ->

	Expected 	= 8,
	Reg 		= a,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_5_test() ->

	Expected 	= 8,
	Reg 		= b,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_6_test() ->

	Expected 	= 8,
	Reg 		= e,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_7_test() ->

	Expected 	= 8,
	Reg 		= f,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_8_test() ->

	Expected 	= 16,
	Reg 		= x,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_9_test() ->

	Expected 	= 16,
	Reg 		= y,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_10_test() ->

	Expected 	= 16,
	Reg 		= u,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_11_test() ->

	Expected 	= 16,
	Reg 		= s,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_12_test() ->

	Expected 	= 16,
	Reg 		= pc,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_13_test() ->

	Expected 	= 16,
	Reg 		= zero,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_14_test() ->

	Expected 	= 16,
	Reg 		= v,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_15_test() ->

	Expected 	= 8,
	Reg 		= dp,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_16_test() ->

	Expected 	= 8,
	Reg 		= cc,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%-----------------------------------------------------------------------------
get_size_of_register_17_test() ->

	Expected 	= 8,
	Reg 		= md,
	tester(Expected,mc6309:get_size_of_register(Reg),?PRINT).

%%=============================================================================
%% pos_inc(Pos)
%%=============================================================================
pos_inc_1_test() ->

	Expected 	= <<1:?SIZE_ADDRESS>>,
	Pos 		= <<0:?SIZE_ADDRESS>>,
	tester(Expected,mc6309:pos_inc(Pos),?PRINT).

%%=============================================================================
%% pos_inc2(Pos)
%%=============================================================================
pos_inc2_1_test() ->

	Expected 	= <<2:?SIZE_ADDRESS>>,
	Pos 		= <<0:?SIZE_ADDRESS>>,
	tester(Expected,mc6309:pos_inc2(Pos),?PRINT).

%%=============================================================================
%% pos_inc_n(Pos,N)
%%=============================================================================
pos_inc_n_1_test() ->

	Expected  	= <<4:?SIZE_ADDRESS>>,
	Pos 		= <<0:?SIZE_ADDRESS>>,
	N 			= 4,
	tester(Expected,mc6309:pos_inc_n(Pos,N),?PRINT).

%%=============================================================================
%% get_register_from_name(Reg_Name)
%%=============================================================================
get_register_from_name_1_test() ->

	Expected 	= <<16#FFFFFFFF:?SIZE_Q>>,
	Reg_Name 	= q,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_Q(<<16#FFFFFFFF:?SIZE_Q>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_2_test() ->

	Expected 	= <<16#FFFF:?SIZE_D>>,
	Reg_Name 	= d,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_D(<<16#FFFF:?SIZE_D>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_3_test() ->

	Expected 	= <<16#FFFF:?SIZE_W>>,
	Reg_Name 	= w,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_W(<<16#FFFF:?SIZE_W>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_4_test() ->

	Expected 	= <<16#FF:?SIZE_A>>,
	Reg_Name 	= a,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_A(<<16#FF:?SIZE_A>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_5_test() ->

	Expected 	= <<16#FF:?SIZE_B>>,
	Reg_Name 	= b,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_B(<<16#FF:?SIZE_B>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_6_test() ->

	Expected 	= <<16#FF:?SIZE_E>>,
	Reg_Name 	= e,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_E(<<16#FF:?SIZE_E>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_7_test() ->

	Expected 	= <<16#FF:?SIZE_F>>,
	Reg_Name 	= f,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_F(<<16#FF:?SIZE_F>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_8_test() ->

	Expected 	= <<16#FFFF:?SIZE_X>>,
	Reg_Name 	= x,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_X(<<16#FFFF:?SIZE_X>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_9_test() ->

	Expected 	= <<16#FFFF:?SIZE_Y>>,
	Reg_Name 	= y,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_Y(<<16#FFFF:?SIZE_Y>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_10_test() ->

	Expected 	= <<16#FFFF:?SIZE_U>>,
	Reg_Name 	= u,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_U(<<16#FFFF:?SIZE_U>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_11_test() ->

	Expected 	= <<16#FFFF:?SIZE_S>>,
	Reg_Name 	= s,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_S(<<16#FFFF:?SIZE_S>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_12_test() ->

	Expected 	= <<16#FFFF:?SIZE_PC>>,
	Reg_Name 	= pc,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_PC(<<16#FFFF:?SIZE_PC>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_13_test() ->

	Expected 	= <<16#FFFF:?SIZE_V>>,
	Reg_Name 	= v,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_V(<<16#FFFF:?SIZE_V>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_14_test() ->

	Expected 	= <<16#FFFF:?SIZE_ZERO>>,
	Reg_Name 	= zero,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_ZERO(<<16#FFFF:?SIZE_ZERO>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_15_test() ->

	Expected 	= <<16#FF:?SIZE_DP>>,
	Reg_Name 	= dp,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_DP(<<16#FF:?SIZE_DP>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_16_test() ->

	Expected 	= <<16#FF:?SIZE_CC>>,
	Reg_Name 	= cc,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_CC(<<16#FF:?SIZE_CC>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%-----------------------------------------------------------------------------
get_register_from_name_17_test() ->

	Expected 	= <<16#FF:?SIZE_MD>>,
	Reg_Name 	= md,
	CPU 		= mc6309:cpu_perform_actions(
												[
													?SET_MD(<<16#FF:?SIZE_MD>>)
												]
											),
	tester(Expected,mc6309:get_register_from_name(Reg_Name,CPU),?PRINT).

%%=============================================================================
%% set_register_from_name(Reg_Name,Value,CPU)
%%=============================================================================
set_register_from_name_1_test() ->

	Value 		= <<16#FFFFFFFF:?SIZE_Q>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_Q(Value)
												]
											),
	Reg_Name 	= q,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_2_test() ->

	Value 		= <<16#FFFF:?SIZE_D>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_D(Value)
												]
											),
	Reg_Name 	= d,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_3_test() ->

	Value 		= <<16#FFFF:?SIZE_W>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_W(Value)
												]
											),
	Reg_Name 	= w,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_4_test() ->

	Value 		= <<16#FF:?SIZE_A>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_A(Value)
												]
											),
	Reg_Name 	= a,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_5_test() ->

	Value 		= <<16#FF:?SIZE_B>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_B(Value)
												]
											),
	Reg_Name 	= b,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_6_test() ->

	Value 		= <<16#FF:?SIZE_E>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_E(Value)
												]
											),
	Reg_Name 	= e,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_7_test() ->

	Value 		= <<16#FF:?SIZE_F>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_F(Value)
												]
											),
	Reg_Name 	= f,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_8_test() ->

	Value 		= <<16#FFFF:?SIZE_X>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_X(Value)
												]
											),
	Reg_Name 	= x,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_9_test() ->

	Value 		= <<16#FFFF:?SIZE_Y>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_Y(Value)
												]
											),
	Reg_Name 	= y,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_10_test() ->

	Value 		= <<16#FFFF:?SIZE_U>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_U(Value)
												]
											),
	Reg_Name 	= u,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_11_test() ->

	Value 		= <<16#FFFF:?SIZE_S>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_S(Value)
												]
											),
	Reg_Name 	= s,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_12_test() ->

	Value 		= <<16#FFFF:?SIZE_PC>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_PC(Value)
												]
											),
	Reg_Name 	= pc,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_13_test() ->

	Value 		= <<16#FFFF:?SIZE_V>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_V(Value)
												]
											),
	Reg_Name 	= v,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_14_test() ->

	Value 		= <<16#FFFF:?SIZE_ZERO>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_ZERO(Value)
												]
											),
	Reg_Name 	= zero,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_15_test() ->

	Value 		= <<16#FF:?SIZE_DP>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_DP(Value)
												]
											),
	Reg_Name 	= dp,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_16_test() ->

	Value 		= <<16#FF:?SIZE_CC>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_CC(Value)
												]
											),
	Reg_Name 	= cc,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%-----------------------------------------------------------------------------
set_register_from_name_17_test() ->

	Value 		= <<16#FF:?SIZE_MD>>,

	Expected 	= mc6309:cpu_perform_actions(
												[
													?SET_MD(Value)
												]
											),
	Reg_Name 	= md,
	CPU 		= mc6309:cpu_clear(),
	tester(Expected,mc6309:set_register_from_name(Reg_Name,Value,CPU),?PRINT).

%%=============================================================================
%%	adcr_immediate_1031(Pos,Data,CPU_Data)
%%=============================================================================
adcr_immediate_1031_1_test() ->

	Expected 	= {
					<<16#10,16#31,?INTER_REG_BITS_B:4,?INTER_REG_BITS_X:4,0>>,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_B(<<1:?SIZE_B>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
					
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#31,?INTER_REG_BITS_B:4,?INTER_REG_BITS_X:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_X(<<1:?SIZE_X>>),
													?SET_B(<<1:?SIZE_B>>)
												]
											),
	tester(Expected,mc6309:adcr_immediate_1031(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
adcr_immediate_1031_2_test() ->

	Expected 	= {
					<<16#10,16#31,?INTER_REG_BITS_A:4,?INTER_REG_BITS_X:4,0>>,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_X(<<1,2>>), %% note result is since A promoted to D!
													?SET_A(<<1:?SIZE_A>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
					
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#31,?INTER_REG_BITS_A:4,?INTER_REG_BITS_X:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_X(<<1:?SIZE_X>>),
													?SET_A(<<1:?SIZE_A>>)
												]
											),
	tester(Expected,mc6309:adcr_immediate_1031(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
adcr_immediate_1031_3_test() ->

	Expected 	= {
					<<16#10,16#31,?INTER_REG_BITS_A:4,?INTER_REG_BITS_X:4,0>>,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_X(<<1,1>>), %% note result is since A promoted to D!
													?SET_A(<<1:?SIZE_A>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
					
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#31,?INTER_REG_BITS_A:4,?INTER_REG_BITS_X:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_X(<<1:?SIZE_X>>),
													?SET_A(<<1:?SIZE_A>>)
												]
											),
	tester(Expected,mc6309:adcr_immediate_1031(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
adcr_immediate_1031_4_test() ->

	Expected 	= {
					<<16#10,16#31,?INTER_REG_BITS_D:4,?INTER_REG_BITS_X:4,0>>,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_X(<<2:?SIZE_X>>), %% note result is since A promoted to D!
													?SET_D(<<1:?SIZE_D>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
					
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#31,?INTER_REG_BITS_D:4,?INTER_REG_BITS_X:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_X(<<1:?SIZE_X>>),
													?SET_D(<<1:?SIZE_D>>)
												]
											),
	tester(Expected,mc6309:adcr_immediate_1031(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% add_generic_part(
%						_Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						Get_Reg_Fun,
%						Set_Reg_Fun,
%						New_Pos
%					)
%%=============================================================================
add_generic_part_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<>>,
	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<4:?SIZE_A>>)
													]
												),
	Memory_Data 	= <<1>>,
	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,
	Set_Reg_Fun 	= fun mc6309:cpu_set_a/2,
	New_Pos 		= <<1:?SIZE_ADDRESS>>,

	Expected  		= {
						<<>>,
						mc6309:cpu_perform_actions(
														[
															?SET_A(<<5:?SIZE_A>>),
															?SET_PC(<<1:?SIZE_PC>>)
														]
													)
					  },

	tester(Expected,mc6309:add_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												Set_Reg_Fun,
												New_Pos
											),?PRINT).

%%-----------------------------------------------------------------------------
add_generic_part_2_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<>>,
	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<1:?SIZE_A>>)
													]
												),
	Memory_Data 	= <<255>>,
	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,
	Set_Reg_Fun 	= fun mc6309:cpu_set_a/2,
	New_Pos 		= <<1:?SIZE_ADDRESS>>,

	Expected  		= {
						<<>>,
						mc6309:cpu_perform_actions(
														[
															?SET_A(<<0:?SIZE_A>>),
															?SET_PC(<<1:?SIZE_PC>>),
															?SET_CC_C(<<1:?SIZE_CC_C>>),
															?SET_CC_Z(<<1:?SIZE_CC_Z>>),
															?SET_CC_H(<<1:?SIZE_CC_H>>)
														]
													)
					  },

	tester(Expected,mc6309:add_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												Set_Reg_Fun,
												New_Pos
											),?PRINT).

%%=============================================================================
%% adda_immediate_8b(Pos,Data,CPU_Data)
%%=============================================================================
adda_immediate_8b_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:?SIZE_A>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2:?SIZE_A>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adda_immediate_8b(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addb_immediate_cb(Pos,Data,CPU_Data)
%%=============================================================================
addb_immediate_cb_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:?SIZE_B>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2:?SIZE_B>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addb_immediate_cb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adde_immediate_118b(Pos,Data,CPU_Data)
%%=============================================================================
adde_immediate_118b_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_E(<<1:?SIZE_E>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_E(<<2:?SIZE_E>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adde_immediate_118b(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addf_immediate_11cb(Pos,Data,CPU_Data)
%%=============================================================================
addf_immediate_11cb_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_F(<<1:?SIZE_F>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_F(<<2:?SIZE_F>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addf_immediate_11cb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adda_direct_9b(Pos,Data,CPU_Data)
%%=============================================================================
adda_direct_9b_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,2,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:?SIZE_A>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2:?SIZE_A>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adda_direct_9b(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addb_direct_db(Pos,Data,CPU_Data)
%%=============================================================================
addb_direct_db_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,2,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:?SIZE_B>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2:?SIZE_B>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addb_direct_db(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adde_direct_119b(Pos,Data,CPU_Data)
%%=============================================================================
adde_direct_119b_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,3,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_E(<<1:?SIZE_E>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_E(<<2:?SIZE_E>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adde_direct_119b(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addf_direct_11db(Pos,Data,CPU_Data)
%%=============================================================================
addf_direct_11db_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,3,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_F(<<1:?SIZE_F>>)
												]
											), 
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_F(<<2:?SIZE_F>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addf_direct_11db(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adda_indexed_ab(Pos,Data,CPU_Data)
%%=============================================================================
adda_indexed_ab_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0, 1              ,2
	Data 		= <<0,Post_Byte/binary,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adda_indexed_ab(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addb_indexed_eb(Pos,Data,CPU_Data)
%%=============================================================================
addb_indexed_eb_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0, 1              ,2
	Data 		= <<0,Post_Byte/binary,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addb_indexed_eb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adde_indexed_11ab(Pos,Data,CPU_Data)
%%=============================================================================
adde_indexed_11ab_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0,1,2               ,3
	Data 		= <<0,0,Post_Byte/binary,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_E(<<1:?SIZE_E>>),
													?SET_X(<<3:?SIZE_X>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_E(<<2:?SIZE_E>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adde_indexed_11ab(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addf_indexed_11eb(Pos,Data,CPU_Data)
%%=============================================================================
addf_indexed_11eb_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0,1,2               ,3
	Data 		= <<0,0,Post_Byte/binary,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_F(<<1:?SIZE_F>>),
													?SET_X(<<3:?SIZE_X>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_F(<<2:?SIZE_F>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addf_indexed_11eb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adda_extended_bb(Pos,Data,CPU_Data)
%%=============================================================================
adda_extended_bb_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),
	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0,1,2,3           ,4,5,6
	Data 		= <<0,Post_Byte/binary,0,6,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<1:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adda_extended_bb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addb_extended_fb(Pos,Data,CPU_Data)
%%=============================================================================
addb_extended_fb_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),
	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0,1,2,3           ,4,5,6
	Data 		= <<0,Post_Byte/binary,0,6,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<1:?SIZE_B>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2:?SIZE_B>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addb_extended_fb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% adde_extended_11bb(Pos,Data,CPU_Data)
%%=============================================================================
adde_extended_11bb_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0,1, 2,3,4,          5,6,7
	Data 		= <<0,0,Post_Byte/binary,0,7,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_E(<<1:?SIZE_E>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_E(<<2:?SIZE_E>>),
													?SET_PC(<<5:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:adde_extended_11bb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addf_extended_11fb(Pos,Data,CPU_Data)
%%=============================================================================
addf_extended_11fb_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	Pos 		= <<0:?SIZE_ADDRESS>>,
	%%index         0,1, 2,3,4,          5,6,7
	Data 		= <<0,0,Post_Byte/binary,0,7,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_F(<<1:?SIZE_F>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_F(<<2:?SIZE_F>>),
													?SET_PC(<<5:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addf_extended_11fb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addd_immediate_c3(Pos,Data,CPU_Data)
%%=============================================================================
addd_immediate_c3_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<1:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2:?SIZE_D>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addd_immediate_c3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addw_immediate_108b(Pos,Data,CPU_Data)
%%=============================================================================
addw_immediate_108b_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_W(<<1:?SIZE_W>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_W(<<2:?SIZE_W>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addw_immediate_108b(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addd_direct_d3(Pos,Data,CPU_Data)
%%=============================================================================
addd_direct_d3_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,2,0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<1:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2:?SIZE_D>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  }, 	
	tester(Expected,mc6309:addd_direct_d3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addw_direct_109b(Pos,Data,CPU_Data)
%%=============================================================================
addw_direct_109b_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,3,0,1>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_W(<<1:?SIZE_W>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_W(<<2:?SIZE_W>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  }, 	
	tester(Expected,mc6309:addw_direct_109b(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addd_indexed_e3(Pos,Data,CPU_Data)
%%=============================================================================
addd_indexed_e3_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,Post_Byte/binary,0,1,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<1:?SIZE_D>>),
													?SET_X(<<2:?SIZE_X>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2:?SIZE_D>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addd_indexed_e3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addw_indexed_10ab(Pos,Data,CPU_Data)
%%=============================================================================
addw_indexed_10ab_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0,0,Post_Byte/binary,0,1,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_W(<<1:?SIZE_W>>),
													?SET_X(<<3:?SIZE_X>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_W(<<2:?SIZE_W>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addw_indexed_10ab(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addd_extended_f3(Pos,Data,CPU_Data)
%%=============================================================================
addd_extended_f3_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%%index         0, 1,2,3          ,4,5,6,7
	Data 		= <<0,Post_Byte/binary,0,6,0,1>>,

	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<1:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2:?SIZE_D>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addd_extended_f3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% addw_extended_10bb(Pos,Data,CPU_Data)
%%=============================================================================
addw_extended_10bb_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%%index         0,1, 2,3,4          ,5,6,7,8
	Data 		= <<0,0,Post_Byte/binary,0,7,0,1>>,

	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_W(<<1:?SIZE_W>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_W(<<2:?SIZE_W>>),
													?SET_PC(<<5:?SIZE_PC>>)
												]
											)
				  },
	tester(Expected,mc6309:addw_extended_10bb(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%%	addr_immediate_1030(Pos,Data,CPU_Data)
%%=============================================================================
addr_immediate_1030_1_test() ->

	Expected 	= {
					<<16#10,16#31,?INTER_REG_BITS_B:4,?INTER_REG_BITS_X:4,0>>,
					mc6309:cpu_perform_actions(
												[
													?SET_X(<<2:?SIZE_X>>),
													?SET_B(<<1:?SIZE_B>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											)
				  },
					
	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<16#10,16#31,?INTER_REG_BITS_B:4,?INTER_REG_BITS_X:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_X(<<1:?SIZE_X>>),
													?SET_B(<<1:?SIZE_B>>)
												]
											),
	tester(Expected,mc6309:addr_immediate_1030(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% direct_1_address_address_only(Pos,Data,CPU_Data)
%%=============================================================================
direct_1_address_address_only_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<4,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_DP(<<1:?SIZE_DP>>)
												]
											),
	Expected 	= {
					<<16#0104:?SIZE_ADDRESS>>,
					mc6309:cpu_perform_actions(
												[
													?SET_DP(<<1:?SIZE_DP>>)
												]
											),
					<<1:?SIZE_ADDRESS>>
				  },
	tester(Expected,mc6309:direct_1_address_address_only(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% direct_2_address_address_only(Pos,Data,CPU_Data)
%%=============================================================================
direct_2_address_address_only_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<4,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_DP(<<1:?SIZE_DP>>)
												]
											),
	Expected 	= {
					<<16#0104:?SIZE_ADDRESS>>,
					mc6309:cpu_perform_actions(
												[
													?SET_DP(<<1:?SIZE_DP>>)
												]
											),
					<<1:?SIZE_ADDRESS>>
				  },
	tester(Expected,mc6309:direct_2_address_address_only(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% constant_offset_from_r_5_bit_offset_direct_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%													    )
%%=============================================================================
constant_offset_from_r_5_bit_offset_direct_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_5_offset_r_direct(x, -1),
	Pos 				= <<0:?SIZE_ADDRESS>>,
	Data 				= <<Post_Byte/bits,0,0,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 1,
	Expected 			= {
							<<1:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_r_5_bit_offset_direct_address_only(
																						Pos,
																						Data,
																						CPU_Data,
																						Number_Of_Bytes
																				    ),?PRINT).

%%=============================================================================
%% constant_offset_from_r_no_offset_address_only(
%													Pos,
%													Data,
%													CPU_Data,
%													Number_Of_Bytes
%												 ) 
%%=============================================================================
constant_offset_from_r_no_offset_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_no_offset_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,
	Data 				= <<Post_Byte/bits,0,0,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 1,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_r_no_offset_address_only(
																			Pos,
																			Data,
																			CPU_Data,
																			Number_Of_Bytes
																		 ),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_no_offset_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_no_offset_r_indirect(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,
	Data 				= <<Post_Byte/bits,0,5,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<1:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 1,
	Expected 			= {
							<<5:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<1:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_r_no_offset_address_only(
																			Pos,
																			Data,
																			CPU_Data,
																			Number_Of_Bytes
																		 ),?PRINT).

%%=============================================================================
%% constant_offset_from_r_8_bit_offset_address_only(
%														Pos,
%														Data,
%														CPU_Data,
%														Number_Of_Bytes
%													)
%%=============================================================================
constant_offset_from_r_8_bit_offset_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_8_offset_r_direct(y, -1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1           ,2,3,4
	Data 				= <<Post_Byte/bits,0,5,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_Y(<<2:?SIZE_Y>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<1:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_Y(<<2:?SIZE_Y>>)
														]
													),
							<<2:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_r_8_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_8_bit_offset_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_8_offset_r_indirect(y, -1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1           ,2,3,4
	Data 				= <<Post_Byte/bits,0,5,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_Y(<<3:?SIZE_Y>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<5:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_Y(<<3:?SIZE_Y>>)
														]
													),
							<<2:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_r_8_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			),?PRINT).

%%=============================================================================
%% constant_offset_from_r_16_bit_offset_address_only(
%														Pos,
%														Data,
%														CPU_Data,
%														Number_Of_Bytes
%													) 
%%=============================================================================
constant_offset_from_r_16_bit_offset_address_only_1_test() ->

		Post_Byte 			= mc6309:post_byte_indexed_16_offset_r_direct(u, -1),
		Pos 				= <<0:?SIZE_ADDRESS>>,

		%% index 				0,1,2         ,3,4
		Data 				= <<Post_Byte/bits,0,5,0>>,
		CPU_Data 			= mc6309:cpu_perform_actions(
															[
																?SET_U(<<3:?SIZE_U>>)
															]
														),
		Number_Of_Bytes 	= 0,
		Expected 			= {
								<<2:?SIZE_ADDRESS>>,
								mc6309:cpu_perform_actions(
															[
																?SET_U(<<3:?SIZE_U>>)
															]
														),
								<<3:?SIZE_ADDRESS>>
							  },
		tester(Expected,mc6309:constant_offset_from_r_16_bit_offset_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_r_16_bit_offset_address_only_2_test() ->

		Post_Byte 			= mc6309:post_byte_indexed_16_offset_r_indirect(u, -1),
		Pos 				= <<0:?SIZE_ADDRESS>>,

		%% index 				0,1,2         ,3,4
		Data 				= <<Post_Byte/bits,0,5,0>>,
		CPU_Data 			= mc6309:cpu_perform_actions(
															[
																?SET_U(<<4:?SIZE_U>>)
															]
														),
		Number_Of_Bytes 	= 0,
		Expected 			= {
								<<5:?SIZE_ADDRESS>>,
								mc6309:cpu_perform_actions(
															[
																?SET_U(<<4:?SIZE_U>>)
															]
														),
								<<3:?SIZE_ADDRESS>>
							  },
		tester(Expected,mc6309:constant_offset_from_r_16_bit_offset_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% constant_offset_from_w_no_offset_address_only(
%													Pos,
%													Data,
%													CPU_Data,
%													Number_Of_Bytes
%												) 
%%=============================================================================
constant_offset_from_w_no_offset_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_no_offset_w_direct(),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,5,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<4:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_w_no_offset_address_only(
																			Pos,
																			Data,
																			CPU_Data,
																			Number_Of_Bytes
																		),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_w_no_offset_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_no_offset_w_indirect(),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,5,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<5:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<1:?SIZE_W>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_w_no_offset_address_only(
																			Pos,
																			Data,
																			CPU_Data,
																			Number_Of_Bytes
																		),?PRINT).

%%=============================================================================
%% constant_offset_from_w_16_bit_offset_address_only(
%														Pos,
%														Data,
%														CPU_Data,
%														Number_Of_Bytes
%													)
%%=============================================================================
constant_offset_from_w_16_bit_offset_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_16_offset_w_direct(-1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1,2         ,3,4,5
	Data 				= <<Post_Byte/bits,0,5,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<2:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<1:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<2:?SIZE_W>>)
														]
													),
							<<3:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_w_16_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_w_16_bit_offset_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_16_offset_w_indirect(-1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1,2         ,3,4,5
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
							<<3:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_w_16_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_a_accumulator_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
accumulator_offset_from_r_a_accumulator_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_a_offset_r_direct(s),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_A(<<-1:?SIZE_A>>),
															?SET_S(<<4:?SIZE_S>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<3:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_A(<<-1:?SIZE_A>>),
															?SET_S(<<4:?SIZE_S>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_a_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_a_accumulator_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_a_offset_r_indirect(s),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_A(<<-1:?SIZE_A>>),
															?SET_S(<<2:?SIZE_S>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_A(<<-1:?SIZE_A>>),
															?SET_S(<<2:?SIZE_S>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_a_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_b_accumulator_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
accumulator_offset_from_r_b_accumulator_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_b_offset_r_direct(s),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_B(<<-1:?SIZE_B>>),
															?SET_S(<<4:?SIZE_S>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<3:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_B(<<-1:?SIZE_B>>),
															?SET_S(<<4:?SIZE_S>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_b_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_b_accumulator_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_b_offset_r_indirect(s),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_B(<<-1:?SIZE_B>>),
															?SET_S(<<2:?SIZE_S>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_B(<<-1:?SIZE_B>>),
															?SET_S(<<2:?SIZE_S>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_b_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% auto_increment_of_r_post_increment_by_1_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
auto_increment_of_r_post_increment_by_1_address_only_1_test() -> 

	Post_Byte 			= mc6309:post_byte_post_increment_1_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<3:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_1_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% auto_increment_of_r_post_increment_by_2_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
auto_increment_of_r_post_increment_by_2_address_only_1_test() -> 

	Post_Byte 			= mc6309:post_byte_post_increment_2_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_2_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
auto_increment_of_r_post_increment_by_2_address_only_2_test() -> 

	Post_Byte 			= mc6309:post_byte_post_increment_2_r_indirect(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<1:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<3:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_increment_of_r_post_increment_by_2_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% auto_decrement_of_r_pre_decrement_by_1_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%													  )
%%=============================================================================
auto_decrement_of_r_pre_decrement_by_1_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_pre_decrement_1_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<1:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<1:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_1_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																			  ),?PRINT).

%%=============================================================================
%% auto_decrement_of_r_pre_decrement_by_2_address_only(
%														Pos,
%														Data,
%														CPU_Data,
%														Number_Of_Bytes
%													  )
%%=============================================================================
auto_decrement_of_r_pre_decrement_by_2_address_only_1_test() -> 

	Post_Byte 			= mc6309:post_byte_pre_decrement_2_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_2_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			  ),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_r_pre_decrement_by_2_address_only_2_test() -> 

	Post_Byte 			= mc6309:post_byte_pre_decrement_2_r_indirect(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,0,7>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_X(<<4:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_decrement_of_r_pre_decrement_by_2_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			  ),?PRINT).

%%=============================================================================
%% auto_increment_of_w_post_increment_by_2_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
auto_increment_of_w_post_increment_by_2_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_post_increment_2_w_direct(),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<2:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_increment_of_w_post_increment_by_2_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
auto_increment_of_w_post_increment_by_2_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_post_increment_2_w_indirect(),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,0,7>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<2:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_increment_of_w_post_increment_by_2_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% auto_decrement_of_w_pre_decrement_by_2_address_only(
%														Pos,
%														Data,
%														CPU_Data,
%														Number_Of_Bytes
%													 )
%%=============================================================================
auto_decrement_of_w_pre_decrement_by_2_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_pre_decrement_2_w_direct(),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<2:?SIZE_W>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_decrement_of_w_pre_decrement_by_2_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			 ),?PRINT).

%%-----------------------------------------------------------------------------
auto_decrement_of_w_pre_decrement_by_2_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_pre_decrement_2_w_indirect(),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,0,7>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<4:?SIZE_W>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<2:?SIZE_W>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:auto_decrement_of_w_pre_decrement_by_2_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			 ),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_d_accumulator_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
accumulator_offset_from_r_d_accumulator_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_d_offset_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_D(<<-1:?SIZE_D>>),
															?SET_X(<<4:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<3:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_D(<<-1:?SIZE_D>>),
															?SET_X(<<4:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_d_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_d_accumulator_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_d_offset_r_indirect(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_D(<<-1:?SIZE_D>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_D(<<-1:?SIZE_D>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_d_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% constant_offset_from_pc_8_bit_offset_address_only(
%														Pos,
%														Data,
%														CPU_Data,
%														Number_Of_Bytes
%													)
%%=============================================================================
constant_offset_from_pc_8_bit_offset_address_only_1_test() -> 

	Post_Byte 			= mc6309:post_byte_8_offset_pc_direct(-1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1           ,2,3,4
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<3:?SIZE_PC>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_PC(<<3:?SIZE_PC>>)
														]
													),
							<<2:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_pc_8_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_8_bit_offset_address_only_2_test() -> 

	Post_Byte 			= mc6309:post_byte_8_offset_pc_indirect(-1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1           ,2,3,4
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<3:?SIZE_PC>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_PC(<<3:?SIZE_PC>>)
														]
													),
							<<2:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_pc_8_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			),?PRINT).

%%=============================================================================
%% constant_offset_from_pc_16_bit_offset_address_only(
%														Pos,
%														Data,
%														CPU_Data,
%														Number_Of_Bytes
%													  )
%%=============================================================================
constant_offset_from_pc_16_bit_offset_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_16_offset_pc_direct(-1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1,2         ,3,4,5
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<3:?SIZE_PC>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_PC(<<3:?SIZE_PC>>)
														]
													),
							<<3:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_pc_16_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			  ),?PRINT).

%%-----------------------------------------------------------------------------
constant_offset_from_pc_16_bit_offset_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_16_offset_pc_indirect(-1),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1,2         ,3,4,5
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<4:?SIZE_PC>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_PC(<<4:?SIZE_PC>>)
														]
													),
							<<3:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:constant_offset_from_pc_16_bit_offset_address_only(
																				Pos,
																				Data,
																				CPU_Data,
																				Number_Of_Bytes
																			  ),?PRINT).

%%=============================================================================
%% extended_indirect_16_bit_address_address_only(
%													Pos,
%													Data,
%													CPU_Data,
%													Number_Of_Bytes
%												)
%%=============================================================================
extended_indirect_16_bit_address_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_extended_16_address_indirect(<<3:?SIZE_ADDRESS>>),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0,1,2         ,3,4,5
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_PC(<<4:?SIZE_PC>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_PC(<<4:?SIZE_PC>>)
														]
													),
							<<3:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:extended_indirect_16_bit_address_address_only(
																			Pos,
																			Data,
																			CPU_Data,
																			Number_Of_Bytes
																		),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_e_accumulator_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
accumulator_offset_from_r_e_accumulator_address_only_1_test() -> 

	Post_Byte 			= mc6309:post_byte_indexed_e_offset_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_E(<<-1:?SIZE_E>>),
															?SET_X(<<3:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_E(<<-1:?SIZE_E>>),
															?SET_X(<<3:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_e_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_e_accumulator_address_only_2_test() -> 

	Post_Byte 			= mc6309:post_byte_indexed_e_offset_r_indirect(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_E(<<-1:?SIZE_E>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_E(<<-1:?SIZE_E>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_e_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_f_accumulator_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
accumulator_offset_from_r_f_accumulator_address_only_1_test() -> 

	Post_Byte 			= mc6309:post_byte_indexed_f_offset_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_F(<<-1:?SIZE_F>>),
															?SET_X(<<3:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_F(<<-1:?SIZE_F>>),
															?SET_X(<<3:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_f_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_f_accumulator_address_only_2_test() -> 

	Post_Byte 			= mc6309:post_byte_indexed_f_offset_r_indirect(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_F(<<-1:?SIZE_F>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_F(<<-1:?SIZE_F>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_f_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% accumulator_offset_from_r_w_accumulator_address_only(
%															Pos,
%															Data,
%															CPU_Data,
%															Number_Of_Bytes
%														)
%%=============================================================================
accumulator_offset_from_r_w_accumulator_address_only_1_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_w_offset_r_direct(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<-1:?SIZE_W>>),
															?SET_X(<<3:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<2:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<-1:?SIZE_W>>),
															?SET_X(<<3:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_w_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%-----------------------------------------------------------------------------
accumulator_offset_from_r_w_accumulator_address_only_2_test() ->

	Post_Byte 			= mc6309:post_byte_indexed_w_offset_r_indirect(x),
	Pos 				= <<0:?SIZE_ADDRESS>>,

	%% index 				0             ,1,2,3
	Data 				= <<Post_Byte/bits,0,7,0>>,
	CPU_Data 			= mc6309:cpu_perform_actions(
														[
															?SET_W(<<-1:?SIZE_W>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
	Number_Of_Bytes 	= 0,
	Expected 			= {
							<<7:?SIZE_ADDRESS>>,
							mc6309:cpu_perform_actions(
														[
															?SET_W(<<-1:?SIZE_W>>),
															?SET_X(<<2:?SIZE_X>>)
														]
													),
							<<1:?SIZE_ADDRESS>>
						  },
	tester(Expected,mc6309:accumulator_offset_from_r_w_accumulator_address_only(
																					Pos,
																					Data,
																					CPU_Data,
																					Number_Of_Bytes
																				),?PRINT).

%%=============================================================================
%% get_n_flag_of_value(Value)
%%=============================================================================
get_n_flag_of_value_1_test() ->

	Value 		= <<255>>,
	Expected 	= <<1:1>>,
	tester(Expected,mc6309:get_n_flag_of_value(Value),?PRINT).

%%-----------------------------------------------------------------------------
get_n_flag_of_value_2_test() ->

	Value 		= <<0>>,
	Expected 	= <<0:1>>,
	tester(Expected,mc6309:get_n_flag_of_value(Value),?PRINT).

%%=============================================================================
%% get_z_flag_of_value(Value)
%%=============================================================================
get_z_flag_of_value_1_test() ->

	Value 		= <<0:16>>,
	Expected 	= <<1:1>>,
	tester(Expected,mc6309:get_z_flag_of_value(Value),?PRINT).

%%-----------------------------------------------------------------------------
get_z_flag_of_value_2_test() ->

	Value 		= <<1:16>>,
	Expected 	= <<0:1>>,
	tester(Expected,mc6309:get_z_flag_of_value(Value),?PRINT).

%%=============================================================================
%% generate_n_z_flags_map(Value)
%%=============================================================================
generate_n_z_flags_map_1_test() ->

	Value 		= <<255>>,
	Expected 	= #{
						n => 1,
						z => 0
				   },
	tester(Expected,mc6309:generate_n_z_flags_map(Value),?PRINT).

%%-----------------------------------------------------------------------------
generate_n_z_flags_map_2_test() ->

	Value 		= <<0>>,
	Expected 	= #{
						n => 0,
						z => 1
				   },
	tester(Expected,mc6309:generate_n_z_flags_map(Value),?PRINT).

%%=============================================================================
%%	aim_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						Immediate_Byte,
%						Designated_Memory_Location,
%						New_Pos
%					)
%%=============================================================================
aim_generic_part_1_test() ->

	Pos 							= <<0:?SIZE_ADDRESS>>,
	%% index 							0, 1        ,2,3, 4
	Data 							= <<0,2#11110000,0,0,2#11111111>>,
	New_CPU_Data 					= mc6309:cpu_perform_actions(
																	[
																		
																	]
																),
	Memory_Data 					= <<2#11111111>>,
	Immediate_Byte 					= <<2#11110000>>,
	Designated_Memory_Location 		= <<4:?SIZE_ADDRESS>>,
	New_Pos 						= <<2:?SIZE_ADDRESS>>,
	Expected 						= {
										<<0,2#11110000,0,0,2#11110000>>,
										mc6309:cpu_perform_actions(
																	[
																		?SET_PC(<<2:?SIZE_PC>>),
																		?SET_CC_N(<<1:?SIZE_CC_N>>)
																	]
																)
									  },
	tester(Expected,mc6309:aim_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Immediate_Byte,
												Designated_Memory_Location,
												New_Pos
											),?PRINT).

%%-----------------------------------------------------------------------------
aim_generic_part_2_test() ->

	Pos 							= <<0:?SIZE_ADDRESS>>,
	%% index 							0, 1        ,2,3, 4
	Data 							= <<0,2#11110000,0,0,2#11111111>>,
	New_CPU_Data 					= mc6309:cpu_perform_actions(
																	[
																		?SET_CC_C(<<1:?SIZE_CC_C>>),
																		?SET_CC_V(<<1:?SIZE_CC_V>>)
																	]
																),
	Memory_Data 					= <<2#11111111>>,
	Immediate_Byte 					= <<2#00000000>>,
	Designated_Memory_Location 		= <<4:?SIZE_ADDRESS>>,
	New_Pos 						= <<2:?SIZE_ADDRESS>>,
	Expected 						= {
										<<0,2#11110000,0,0,2#00000000>>,
										mc6309:cpu_perform_actions(
																	[
																		?SET_PC(<<2:?SIZE_PC>>),
																		?SET_CC_C(<<1:?SIZE_CC_C>>),
																		?SET_CC_V(<<0:?SIZE_CC_V>>),
																		?SET_CC_Z(<<1:?SIZE_CC_Z>>)
																	]
																)
									  },
	tester(Expected,mc6309:aim_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Immediate_Byte,
												Designated_Memory_Location,
												New_Pos
											),?PRINT).

%%=============================================================================
%% aim_direct_02(Pos,Data,CPU_Data) 
%%=============================================================================
aim_direct_02_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index 		0,1,2         ,3,4,5
	Data 		= <<0,5,2#11110000,0,0,2#11111111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
	Expected 	= {
					<<0,5,2#11110000,0,0,2#11110000>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<3:?SIZE_PC>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											)
				  },
	tester(Expected,mc6309:aim_direct_02(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% aim_indexed_62(Pos,Data,CPU_Data)
%%=============================================================================
aim_indexed_62_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index 		0,1             ,2         ,3,4,5
	Data 		= <<0,Post_Byte/bits,2#11110000,0,0,2#11111111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_X(<<5:?SIZE_X>>)
												]
											),
	Expected 	= {
					<<0,Post_Byte/bits,2#11110000,0,0,2#11110000>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<3:?SIZE_PC>>),
													?SET_X(<<5:?SIZE_X>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											)
				  },
	tester(Expected,mc6309:aim_indexed_62(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% aim_extended_72(Pos,Data,CPU_Data)
%%=============================================================================
aim_extended_72_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index 		0,1,2           ,4         ,5,6,7
	Data 		= <<0,Post_Byte/bits,2#11110000,0,7,2#11111111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
	Expected 	= {
					<<0,Post_Byte/bits,2#11110000,0,7,2#11110000>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<5:?SIZE_PC>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											)
				  },
	tester(Expected,mc6309:aim_extended_72(Pos,Data,CPU_Data),?PRINT). 


%%=============================================================================
%% and_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						Get_Reg_Fun,
%						Set_Reg_Fun,
%						New_Pos
%					)
%%=============================================================================
and_generic_part_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0,2#11110000>>,
	New_CPU_Data    = mc6309:cpu_perform_actions(
													[
														?SET_A(<<255:?SIZE_A>>)
													]
												),
	Memory_Data 	= <<2#11110000>>,
	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,
	Set_Reg_Fun		= fun mc6309:cpu_set_a/2,
	New_Pos 		= <<2:?SIZE_ADDRESS>>,
	Expected 		= {
						<<0,2#11110000>>,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_A(<<2#11110000:?SIZE_A>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:and_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												Set_Reg_Fun,
												New_Pos
											),?PRINT).

%%=============================================================================
%% anda_immediate_84(Pos,Data,CPU_Data)
%%=============================================================================
anda_immediate_84_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<255:?SIZE_A>>)
													]
												),
	Expected 		= {
						<<0,2#11110000>>,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_A(<<2#11110000:?SIZE_A>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:anda_immediate_84(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% andb_immediate_c4(Pos,Data,CPU_Data)
%%=============================================================================
andb_immediate_c4_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_B(<<255:?SIZE_B>>)
													]
												),
	Expected 		= {
						<<0,2#11110000>>,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_B(<<2#11110000:?SIZE_B>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:andb_immediate_c4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% anda_direct_94(Pos,Data,CPU_Data)
%%=============================================================================
anda_direct_94_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0,2,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<255:?SIZE_A>>)
													]
												),
	Expected 		= {
						<<0,2,2#11110000>>,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_A(<<2#11110000:?SIZE_A>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:anda_direct_94(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% andb_direct_d4(Pos,Data,CPU_Data)
%%=============================================================================
andb_direct_d4_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0,2,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_B(<<255:?SIZE_B>>)
													]
												),
	Expected 		= {
						<<0,2,2#11110000>>,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_B(<<2#11110000:?SIZE_B>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:andb_direct_d4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% anda_indexed_a4(Pos,Data,CPU_Data)
%%=============================================================================
anda_indexed_a4_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0,Post_Byte/bits,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<255:?SIZE_A>>),
														?SET_X(<<2:?SIZE_X>>)
													]
												),
	Expected 		= {
						<<0,Post_Byte/bits,2#11110000>>,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_A(<<2#11110000:?SIZE_A>>),
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:anda_indexed_a4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% andb_indexed_e4(Pos,Data,CPU_Data)
%%=============================================================================
andb_indexed_e4_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0,Post_Byte/bits,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_B(<<255:?SIZE_B>>),
														?SET_X(<<2:?SIZE_X>>)
													]
												),
	Expected 		= {
						<<0,Post_Byte/bits,2#11110000>>,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_B(<<2#11110000:?SIZE_B>>),
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:andb_indexed_e4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% anda_extended_b4(Pos,Data,CPU_Data)
%%=============================================================================
anda_extended_b4_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index            0,1,2,3         ,4,5,6
	Data 			= <<0,Post_Byte/bits,0,6,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<255:?SIZE_A>>),
														?SET_X(<<2:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<4:?SIZE_PC>>),
														?SET_A(<<2#11110000:?SIZE_A>>),
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:anda_extended_b4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% andb_extended_f4(Pos,Data,CPU_Data)
%%=============================================================================
andb_extended_f4_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index            0,1,2,3         ,4,5,6
	Data 			= <<0,Post_Byte/bits,0,6,2#11110000>>,
	CPU_Data    	= mc6309:cpu_perform_actions(
													[
														?SET_B(<<255:?SIZE_B>>),
														?SET_X(<<2:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<4:?SIZE_PC>>),
														?SET_B(<<2#11110000:?SIZE_B>>),
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },
	tester(Expected,mc6309:andb_extended_f4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% andcc_immediate_1c(Pos,Data,CPU_Data)
%%=============================================================================
andcc_immediate_1c_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index            0,1        
	Data 			= <<0,2#11110000>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_CC(<<2#11111111:?SIZE_CC>>)
													]
												),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>),
													?SET_CC(<<2#11110000:?SIZE_CC>>)
												]
											)
				  },
	tester(Expected,mc6309:andcc_immediate_1c(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% andd_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						New_Pos
%					)
%%=============================================================================
andd_generic_part_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index            0,1         ,2         ,3
	Data 			= <<0,2#11110000,2#11110000,0>>,
	Memory_Data 	= <<2#11110000,2#11110000>>,
	New_Pos 		= <<3:?SIZE_ADDRESS>>,
	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_D(<<2#1111111111111111:?SIZE_D>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<3:?SIZE_PC>>),
														?SET_D(<<2#1111000011110000:?SIZE_D>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>)
													]
												)
					  },

	tester(Expected,mc6309:andd_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												New_Pos
											),?PRINT).

%%=============================================================================
%%	andd_immediate_1084(Pos,Data,CPU_Data)
%%=============================================================================
andd_immediate_1084_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2         ,3         ,4
	Data 		= <<0,0,2#11110000,2#11110000,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#1111111111111111:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<4:?SIZE_PC>>),
													?SET_D(<<2#1111000011110000:?SIZE_D>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	
	tester(Expected,mc6309:andd_immediate_1084(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%%	andd_direct_1094(Pos,Data,CPU_Data)
%%=============================================================================
andd_direct_1094_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,3         ,4         ,5
	Data 		= <<0,0,3,2#11110000,2#11110000,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#1111111111111111:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<3:?SIZE_PC>>),
													?SET_D(<<2#1111000011110000:?SIZE_D>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	
	tester(Expected,mc6309:andd_direct_1094(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%%	andd_indexed_10a4(Pos,Data,CPU_Data)
%%=============================================================================
andd_indexed_10a4_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),
	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,            ,3         ,4         ,5
	Data 		= <<0,0,Post_Byte/bits,2#11110000,2#11110000,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#1111111111111111:?SIZE_D>>),
													?SET_X(<<3:?SIZE_X>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<3:?SIZE_PC>>),
													?SET_D(<<2#1111000011110000:?SIZE_D>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	
	tester(Expected,mc6309:andd_indexed_10a4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%%	andd_extended_10b4(Pos,Data,CPU_Data)
%%=============================================================================
andd_extended_10b4_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,3,4         ,5,6,7         ,8
	Data 		= <<0,0,Post_Byte/bits,0,7,2#11110000,2#11110000,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#1111111111111111:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<5:?SIZE_PC>>),
													?SET_D(<<2#1111000011110000:?SIZE_D>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	
	tester(Expected,mc6309:andd_extended_10b4(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% andr_immediate_1034(Pos,Data,CPU_Data)
%%=============================================================================
andr_immediate_1034_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2                                      ,3,4
	Data 		= <<0,0,?INTER_REG_BITS_X:4,?INTER_REG_BITS_Y:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_X(<<2#1111111111111111:?SIZE_X>>),
													?SET_Y(<<2#1111111100000000:?SIZE_Y>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<3:?SIZE_PC>>),
													?SET_X(<<2#1111111111111111:?SIZE_X>>),
													?SET_Y(<<2#1111111100000000:?SIZE_Y>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	
	tester(Expected,mc6309:andr_immediate_1034(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asla_inherent_48(Pos,Data,CPU_Data)
%%=============================================================================
asla_inherent_48_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<1:?SIZE_PC>>),
													?SET_A(<<2#11111110:?SIZE_A>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											  )
				  },	
	tester(Expected,mc6309:asla_inherent_48(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% aslb_inherent_58(Pos,Data,CPU_Data)
%%=============================================================================
aslb_inherent_58_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#01111111:?SIZE_B>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<1:?SIZE_PC>>),
													?SET_B(<<2#11111110:?SIZE_B>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											  )
				  },	
	tester(Expected,mc6309:aslb_inherent_58(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asl_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						Designated_Memory_Location,
%						New_Pos
%					)
%%=============================================================================
asl_generic_part_1_test() ->

	Pos 							= <<0:?SIZE_ADDRESS>>,
	Data 							= <<0,2#11111111>>,
	New_CPU_Data 					= mc6309:cpu_perform_actions(
																	[
																	]
																),
	Memory_Data 					= <<2#11111111>>,
	Designated_Memory_Location 		= <<1:?SIZE_ADDRESS>>,
	New_Pos 						= <<1:?SIZE_ADDRESS>>,
	Expected 						= {
										<<0,2#11111110>>,
										mc6309:cpu_perform_actions(
																	[
																		?SET_PC(<<1:?SIZE_PC>>),
																		?SET_CC_C(<<1:?SIZE_CC_C>>),
																		?SET_CC_N(<<1:?SIZE_CC_N>>)
																	]
																  )
									  },
	tester(Expected,mc6309:asl_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Designated_Memory_Location,
												New_Pos
											),?PRINT).

%%=============================================================================
%% asl_direct_08(Pos,Data,CPU_Data)
%%=============================================================================
asl_direct_08_1_test() ->
 	
 	Pos 		= <<0:?SIZE_ADDRESS>>,
 	Data 		= <<0,2,2#11111111>>,
 	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
 	Expected 	= {
					<<0,2,2#11111110>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	tester(Expected,mc6309:asl_direct_08(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asl_indexed_68(Pos,Data,CPU_Data)
%%=============================================================================
asl_indexed_68_1_test() ->
 	
 	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

 	Pos 		= <<0:?SIZE_ADDRESS>>,

 	%% index 		0,1             ,2
 	Data 		= <<0,Post_Byte/bits,2#11111111>>,
 	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_X(<<2:?SIZE_X>>)
												]
											),
 	Expected 	= {
					<<0,Post_Byte/bits,2#11111110>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	tester(Expected,mc6309:asl_indexed_68(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asl_extended_78(Pos,Data,CPU_Data)
%%=============================================================================
asl_extended_78_1_test() ->
 	
 	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

 	Pos 		= <<0:?SIZE_ADDRESS>>,

 	%% index 		0,1,2,3         ,4,5,6
 	Data 		= <<0,Post_Byte/bits,0,6,2#11111111>>,
 	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
 	Expected 	= {
					<<0,Post_Byte/bits,0,6,2#11111110>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<4:?SIZE_PC>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	tester(Expected,mc6309:asl_extended_78(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asld_inherent_1048(Pos,Data,CPU_Data)
%%=============================================================================
asld_inherent_1048_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#1111111111111111:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>),
													?SET_D(<<2#1111111111111110:?SIZE_D>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											  )
				  },	
	tester(Expected,mc6309:asld_inherent_1048(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asra_inherent_47(Pos,Data,CPU_Data)
%%=============================================================================
asra_inherent_47_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#10000001:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<1:?SIZE_PC>>),
													?SET_A(<<2#11000000:?SIZE_A>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											  )
				  },	
	tester(Expected,mc6309:asra_inherent_47(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asrb_inherent_57(Pos,Data,CPU_Data)
%%=============================================================================
asrb_inherent_57_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#10000001:?SIZE_B>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<1:?SIZE_PC>>),
													?SET_B(<<2#11000000:?SIZE_B>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											  )
				  },	
	tester(Expected,mc6309:asrb_inherent_57(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asr_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						Designated_Memory_Location,
%						New_Pos
%					)
%%=============================================================================
asr_generic_part_1_test() ->

	Pos 							= <<0:?SIZE_ADDRESS>>,
	Data 							= <<0,2#10000001>>,
	New_CPU_Data 					= mc6309:cpu_perform_actions(
																	[
																	]
																),
	Memory_Data 					= <<2#10000001>>,
	Designated_Memory_Location 		= <<1:?SIZE_ADDRESS>>,
	New_Pos 						= <<1:?SIZE_ADDRESS>>,
	Expected 						= {
										<<0,2#11000000>>,
										mc6309:cpu_perform_actions(
																	[
																		?SET_PC(<<1:?SIZE_PC>>),
																		?SET_CC_C(<<1:?SIZE_CC_C>>),
																		?SET_CC_N(<<1:?SIZE_CC_N>>)
																	]
																  )
									  },
	tester(Expected,mc6309:asr_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Designated_Memory_Location,
												New_Pos
											),?PRINT).

%%=============================================================================
%% asr_direct_07(Pos,Data,CPU_Data)
%%=============================================================================
asr_direct_07_1_test() ->
 	
 	Pos 		= <<0:?SIZE_ADDRESS>>,
 	Data 		= <<0,2,2#10000001>>,
 	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
 	Expected 	= {
					<<0,2,2#11000000>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	tester(Expected,mc6309:asr_direct_07(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asr_indexed_67(Pos,Data,CPU_Data)
%%=============================================================================
asr_indexed_67_1_test() ->
 	
 	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

 	Pos 		= <<0:?SIZE_ADDRESS>>,

 	%% index 		0,1             ,2
 	Data 		= <<0,Post_Byte/bits,2#10000001>>,
 	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_X(<<2:?SIZE_X>>)
												]
											),
 	Expected 	= {
					<<0,Post_Byte/bits,2#11000000>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	tester(Expected,mc6309:asr_indexed_67(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asr_extended_77(Pos,Data,CPU_Data)
%%=============================================================================
asr_extended_77_1_test() ->
 	
 	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

 	Pos 		= <<0:?SIZE_ADDRESS>>,

 	%% index 		0,1,2,3         ,4,5,6
 	Data 		= <<0,Post_Byte/bits,0,6,2#10000001>>,
 	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
 	Expected 	= {
					<<0,Post_Byte/bits,0,6,2#11000000>>,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<4:?SIZE_PC>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											  )
				  },
	tester(Expected,mc6309:asr_extended_77(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% asrd_inherent_1047(Pos,Data,CPU_Data)
%%=============================================================================
asrd_inherent_1047_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#1000000000000001:?SIZE_D>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>),
													?SET_D(<<2#1100000000000000:?SIZE_D>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											  )
				  },	
	tester(Expected,mc6309:asrd_inherent_1047(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% band_reg_name_decode(RR)
%%=============================================================================
band_reg_name_decode_1_test() ->

	RR 			= 2#00, 
	Expected    = cc,
	tester(Expected,mc6309:band_reg_name_decode(RR),?PRINT).

band_reg_name_decode_2_test() ->

	RR 			= 2#01, 
	Expected    = a,
	tester(Expected,mc6309:band_reg_name_decode(RR),?PRINT).

band_reg_name_decode_3_test() ->

	RR 			= 2#10, 
	Expected    = b,
	tester(Expected,mc6309:band_reg_name_decode(RR),?PRINT).

%%=============================================================================
%% band_direct_1130(Pos,Data,CPU_Data)
%%=============================================================================
band_direct_1130_1_test() ->

	Post_Byte 	= <<2#01:2,1:3,1:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#00000010>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:band_direct_1130(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
band_direct_1130_2_test() ->

	Post_Byte 	= <<2#01:2,3:3,0:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#11110111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111110:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:band_direct_1130(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bcc_relative_24(Pos,Data,CPU_Data) -> 
%%=============================================================================
bcc_relative_24_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[

												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bcc_relative_24(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bcc_relative_24_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bcc_relative_24(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bcc_relative_24_3_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,-2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<0:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bcc_relative_24(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bcs_relative_25(Pos,Data,CPU_Data) -> 
%%=============================================================================
bcs_relative_25_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[

												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bcs_relative_25(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bcs_relative_25_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bcs_relative_25(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bcs_relative_25_3_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,-2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<0:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bcs_relative_25(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% beor_direct_1134(Pos,Data,CPU_Data)
%%=============================================================================
beor_direct_1134_1_test() ->

	Post_Byte 	= <<2#01:2,1:3,1:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#00000010>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000000:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:beor_direct_1134(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
beor_direct_1134_2_test() ->

	Post_Byte 	= <<2#01:2,3:3,0:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#11110111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:beor_direct_1134(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% beq_relative_27(Pos,Data,CPU_Data) -> 
%%=============================================================================
beq_relative_27_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:beq_relative_27(Pos,Data,CPU_Data),?PRINT).

beq_relative_27_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:beq_relative_27(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bge_relative_2c(Pos,Data,CPU_Data) -> 
%%=============================================================================
bge_relative_2c_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bge_relative_2c(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bge_relative_2c_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bge_relative_2c(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bgt_relative_2e(Pos,Data,CPU_Data) -> 
%%=============================================================================
bgt_relative_2e_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bgt_relative_2e(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bgt_relative_2e_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bgt_relative_2e(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bhi_relative_22(Pos,Data,CPU_Data) -> 
%%=============================================================================
bhi_relative_22_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bhi_relative_22(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bhi_relative_22_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bhi_relative_22(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bhs_relative_24(Pos,Data,CPU_Data) -> 
%%=============================================================================
bhs_relative_24_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bhs_relative_24(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bhs_relative_24_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bhs_relative_24(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% biand_direct_1131(Pos,Data,CPU_Data)
%%=============================================================================
biand_direct_1131_1_test() ->

	Post_Byte 	= <<2#01:2,1:3,1:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#00000000>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:biand_direct_1131(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
biand_direct_1131_2_test() ->

	Post_Byte 	= <<2#01:2,3:3,0:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#11111111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111110:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:biand_direct_1131(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bieor_direct_1135(Pos,Data,CPU_Data)
%%=============================================================================
bieor_direct_1135_1_test() ->

	Post_Byte 	= <<2#01:2,1:3,1:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#00000000>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000000:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bieor_direct_1135(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bieor_direct_1135_2_test() ->

	Post_Byte 	= <<2#01:2,3:3,0:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#11111111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bieor_direct_1135(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bior_direct_1133(Pos,Data,CPU_Data)
%%=============================================================================
bior_direct_1133_1_test() ->

	Post_Byte 	= <<2#01:2,1:3,1:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#00000000>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bior_direct_1133(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bior_direct_1133_2_test() ->

	Post_Byte 	= <<2#01:2,3:3,0:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#11110111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111110:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bior_direct_1133(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%%	bit_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						Get_Reg_Fun,
%						New_Pos
%					)
%%=============================================================================
bit_generic_part_1_test() ->

	Pos 							= <<0:?SIZE_ADDRESS>>,
	Data 							= <<0,2#10000001>>,
	Get_Reg_Fun	 					= fun mc6309:cpu_get_a/1,
	New_CPU_Data 					= mc6309:cpu_perform_actions(
																	[
																		?SET_A(<<2#111111111:?SIZE_A>>)
																	]
																),
	Memory_Data 					= <<2#10000001>>,
	New_Pos 						= <<1:?SIZE_ADDRESS>>,
	Expected 						= {
										<<0,2#10000001>>,
										mc6309:cpu_perform_actions(
																	[
																		?SET_PC(<<1:?SIZE_PC>>),
																		?SET_A(<<2#111111111:?SIZE_A>>),
																		?SET_CC_V(<<0:?SIZE_CC_V>>),
																		?SET_CC_Z(<<0:?SIZE_CC_Z>>),
																		?SET_CC_N(<<1:?SIZE_CC_N>>)
																	]
																  )
									  },
	tester(Expected,mc6309:bit_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												New_Pos
											),?PRINT).

%%-----------------------------------------------------------------------------
bit_generic_part_2_test() ->

	Pos 							= <<0:?SIZE_ADDRESS>>,
	Data 							= <<0,2#00000000>>,
	Get_Reg_Fun	 					= fun mc6309:cpu_get_a/1,
	New_CPU_Data 					= mc6309:cpu_perform_actions(
																	[
																		?SET_A(<<2#111111111:?SIZE_A>>),
																		?SET_CC_V(<<1:?SIZE_CC_V>>)
																	]
																),
	Memory_Data 					= <<2#00000000>>,
	New_Pos 						= <<1:?SIZE_ADDRESS>>,
	Expected 						= {
										<<0,2#00000000>>,
										mc6309:cpu_perform_actions(
																	[
																		?SET_PC(<<1:?SIZE_PC>>),
																		?SET_A(<<2#111111111:?SIZE_A>>),
																		?SET_CC_V(<<0:?SIZE_CC_V>>),
																		?SET_CC_Z(<<1:?SIZE_CC_Z>>),
																		?SET_CC_N(<<0:?SIZE_CC_N>>)
																	]
																  )
									  },
	tester(Expected,mc6309:bit_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												New_Pos
											),?PRINT).

%%=============================================================================
%% bita_immediate_85(Pos,Data,CPU_Data)
%%=============================================================================
bita_immediate_85_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             
	Data 		= <<0,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bita_immediate_85(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bita_immediate_85_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             
	Data 		= <<0,2#00000000>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bita_immediate_85(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitb_immediate_c5(Pos,Data,CPU_Data)
%%=============================================================================
bitb_immediate_c5_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             
	Data 		= <<0,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitb_immediate_c5(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bitb_immediate_c5_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             
	Data 		= <<0,2#00000000>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitb_immediate_c5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bita_direct_95(Pos,Data,CPU_Data)
%%=============================================================================
bita_direct_95_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             
	Data 		= <<0,2,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bita_direct_95(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitb_direct_d5(Pos,Data,CPU_Data)
%%=============================================================================
bitb_direct_d5_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             
	Data 		= <<0,2,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitb_direct_d5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bita_indexed_a5(Pos,Data,CPU_Data)
%%=============================================================================
bita_indexed_a5_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1             ,2             
	Data 		= <<0,Post_Byte/bits,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bita_indexed_a5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitb_indexed_e5(Pos,Data,CPU_Data)
%%=============================================================================
bitb_indexed_e5_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1             ,2             
	Data 		= <<0,Post_Byte/bits,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitb_indexed_e5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bita_extended_b5(Pos,Data,CPU_Data)
%%=============================================================================
bita_extended_b5_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,3         ,4,5,6              
	Data 		= <<0,Post_Byte/bits,0,6,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bita_extended_b5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitb_extended_f5(Pos,Data,CPU_Data)
%%=============================================================================
bitb_extended_f5_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,3         ,4,5,6              
	Data 		= <<0,Post_Byte/bits,0,6,2#10000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_B>>),
													?SET_X(<<2:?SIZE_X>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitb_extended_f5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitd_immediate_1085(Pos,Data,CPU_Data)
%%=============================================================================
bitd_immediate_1085_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2         ,3             
	Data 		= <<0,0,2#10000000,2#00000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitd_immediate_1085(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitd_direct_1095(Pos,Data,CPU_Data)
%%=============================================================================
bitd_direct_1095_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,3         ,4             
	Data 		= <<0,0,3,2#10000000,2#00000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitd_direct_1095(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitd_indexed_10a5(Pos,Data,CPU_Data)
%%=============================================================================
bitd_indexed_10a5_1_test() ->

	Post_Byte 	= mc6309:post_byte_indexed_no_offset_r_direct(x),
	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3         ,4             
	Data 		= <<0,0,Post_Byte/bits,2#10000000,2#00000001>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitd_indexed_10a5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitd_extended_10b5(Pos,Data,CPU_Data)
%%=============================================================================
bitd_extended_10b5_1_test() ->

	Post_Byte 	= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,3,4         ,5,6,7         ,8             
	Data 		= <<0,0,Post_Byte/bits,0,7,2#10000000,2#00000001>>,

	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#11111111,2#11111111>>),
													?SET_X(<<3:?SIZE_X>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<5:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitd_extended_10b5(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bitmd_immediate_113c(Pos,Data,CPU_Data)
%%=============================================================================
bitmd_immediate_113c_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2            
	Data 		= <<0,0,2#11000011>>,

	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_MD(<<2#10000000:?SIZE_MD>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_MD(<<2#00000000:?SIZE_MD>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitmd_immediate_113c(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bitmd_immediate_113c_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2            
	Data 		= <<0,0,2#11000011>>,

	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_MD(<<2#00000000:?SIZE_MD>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_MD(<<2#00000000:?SIZE_MD>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_PC(<<3:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bitmd_immediate_113c(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% ble_relative_2f(Pos,Data,CPU_Data) -> 
%%=============================================================================
ble_relative_2f_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:ble_relative_2f(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
ble_relative_2f_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:ble_relative_2f(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
ble_relative_2f_3_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:ble_relative_2f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% blo_relative_25(Pos,Data,CPU_Data) -> 
%%=============================================================================
blo_relative_25_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[

												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:blo_relative_25(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
blo_relative_25_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:blo_relative_25(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
blo_relative_25_3_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,-2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<0:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:blo_relative_25(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bls_relative_23(Pos,Data,CPU_Data) -> 
%%=============================================================================
bls_relative_23_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bls_relative_23(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bls_relative_23_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bls_relative_23(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bls_relative_23_3_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bls_relative_23(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% blt_relative_2d(Pos,Data,CPU_Data) -> 
%%=============================================================================
blt_relative_2d_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:blt_relative_2d(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
blt_relative_2d_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:blt_relative_2d(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bmi_relative_2b(Pos,Data,CPU_Data) -> 
%%=============================================================================
bmi_relative_2b_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bmi_relative_2b(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bmi_relative_2b_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<0:?SIZE_CC_N>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bmi_relative_2b(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bne_relative_26(Pos,Data,CPU_Data) -> 
%%=============================================================================
bne_relative_26_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bne_relative_26(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bne_relative_26_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bne_relative_26(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bor_direct_1132(Pos,Data,CPU_Data)
%%=============================================================================
bor_direct_1132_1_test() ->

	Post_Byte 	= <<2#01:2,1:3,1:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#00000010>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000000:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000010:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bor_direct_1132(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bor_direct_1132_2_test() ->

	Post_Byte 	= <<2#01:2,3:3,0:3>>,

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2             ,3,4
	Data 		= <<0,0,Post_Byte/bits,4,2#11110111>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bor_direct_1132(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bpl_relative_2a(Pos,Data,CPU_Data) -> 
%%=============================================================================
bpl_relative_2a_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<0:?SIZE_CC_N>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bpl_relative_2a(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bpl_relative_2a_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bpl_relative_2a(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bra_relative_20(Pos,Data,CPU_Data) -> 
%%=============================================================================
bra_relative_20_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bpl_relative_2a(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% brn_relative_21(Pos,Data,CPU_Data) -> 
%%=============================================================================
brn_relative_21_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:brn_relative_21(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bsr_relative_8d(Pos,Data,CPU_Data) -> 
%%=============================================================================
bsr_relative_8d_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2,3,4,5,6,7,8,9,10
	Data 		= <<0,2,0,0,0,0,0,0,0,2,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_S(<<10:?SIZE_S>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_S(<<8:?SIZE_S>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bsr_relative_8d(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bvc_relative_28(Pos,Data,CPU_Data) -> 
%%=============================================================================
bvc_relative_28_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<0:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bvc_relative_28(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bvc_relative_28_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bvc_relative_28(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% bvs_relative_29(Pos,Data,CPU_Data) -> 
%%=============================================================================
bvs_relative_29_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<1:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_PC(<<4:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bvs_relative_29(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
bvs_relative_29_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1         ,2,3,4
	Data 		= <<0,2:8/signed,0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<0:?SIZE_CC_V>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:bvs_relative_29(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clra_inherent_4f(Pos,Data,CPU_Data) -> 
%%=============================================================================
clra_inherent_4f_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<16#FF:?SIZE_A>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_A(<<16#0:?SIZE_A>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<1:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:clra_inherent_4f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clrb_inherent_5f(Pos,Data,CPU_Data) -> 
%%=============================================================================
clrb_inherent_5f_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<16#FF:?SIZE_B>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_B(<<16#0:?SIZE_B>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<1:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:clrb_inherent_5f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clrd_inherent_104f(Pos,Data,CPU_Data) -> 
%%=============================================================================
clrd_inherent_104f_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2
	Data 		= <<0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<16#FFFF:?SIZE_D>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_D(<<16#0:?SIZE_D>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:clrd_inherent_104f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clre_inherent_114f(Pos,Data,CPU_Data) -> 
%%=============================================================================
clre_inherent_114f_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_E(<<16#FF:?SIZE_E>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_E(<<16#0:?SIZE_E>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<1:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:clre_inherent_114f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clrf_inherent_115f(Pos,Data,CPU_Data) -> 
%%=============================================================================
clrf_inherent_115f_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1
	Data 		= <<0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_F(<<16#FF:?SIZE_F>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_F(<<16#0:?SIZE_F>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<1:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:clrf_inherent_115f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clrw_inherent_105f(Pos,Data,CPU_Data) -> 
%%=============================================================================
clrw_inherent_105f_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2
	Data 		= <<0,0,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_W(<<16#FFFF:?SIZE_W>>),
													?SET_CC_N(<<1:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_V(<<1:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_W(<<16#0:?SIZE_W>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<0:?SIZE_CC_C>>),
													?SET_PC(<<2:?SIZE_PC>>)
												]
											  )
				  },
	tester(Expected,mc6309:clrw_inherent_105f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clr_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Designated_Memory_Location,
%						New_Pos
%					)
%%=============================================================================
clr_generic_part_1_test() ->

	Pos 						= <<0:?SIZE_ADDRESS>>,
	Designated_Memory_Location 	= <<1:?SIZE_ADDRESS>>,
	New_Pos 					= <<2:?SIZE_ADDRESS>>,

	%% index        0,1,2
	Data 						= <<0,2#11111111,0>>,
	New_CPU_Data 				= mc6309:cpu_perform_actions(
																[
																	?SET_CC_N(<<1:?SIZE_CC_N>>),
																	?SET_CC_Z(<<0:?SIZE_CC_Z>>),
																	?SET_CC_V(<<1:?SIZE_CC_V>>),
																	?SET_CC_C(<<1:?SIZE_CC_C>>)
																]
															),
	Expected 					= {
									<<0,0,0>>,
									mc6309:cpu_perform_actions(
																[
																	?SET_CC_N(<<0:?SIZE_CC_N>>),
																	?SET_CC_Z(<<1:?SIZE_CC_Z>>),
																	?SET_CC_V(<<0:?SIZE_CC_V>>),
																	?SET_CC_C(<<0:?SIZE_CC_C>>),
																	?SET_PC(<<2:?SIZE_PC>>)
																]
															  )
								  },
	tester(Expected,mc6309:clr_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Designated_Memory_Location,
												New_Pos
											),?PRINT).

%%=============================================================================
%% clr_direct_0f(Pos,Data,CPU_Data)
%%=============================================================================
clr_direct_0f_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2
	Data 			= <<0,2,2#11111111,0>>,
	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<1:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												),
	Expected 		= {
						<<0,2,0,0>>,
						mc6309:cpu_perform_actions(
													[
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<0:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:clr_direct_0f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clr_indexed_6f(Pos,Data,CPU_Data)
%%=============================================================================
clr_indexed_6f_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1             ,2
	Data 			= <<0,Post_Byte/bits,2#11111111,0>>,
	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<1:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												),
	Expected 		= {
						<<0,Post_Byte/bits,0,0>>,
						mc6309:cpu_perform_actions(
													[
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<0:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:clr_indexed_6f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% clr_extended_7f(Pos,Data,CPU_Data)
%%=============================================================================
clr_extended_7f_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3         ,4,5,6
	Data 			= <<0,Post_Byte/bits,0,6,2#11111111,0>>,
	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<1:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												),
	Expected 		= {
						<<0,Post_Byte/bits,0,6,0,0>>,
						mc6309:cpu_perform_actions(
													[
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<0:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:clr_extended_7f(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmp_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Memory_Data,
%						Get_Reg_Fun,
%						New_Pos
%					)
%%=============================================================================
cmp_generic_part_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1
	Data 			= <<0,5>>,

	Memory_Data 	= <<5>>,

	New_Pos 		= <<2:?SIZE_ADDRESS>>,

	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,

	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<1:?SIZE_A>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<1:?SIZE_A>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<0:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	

	tester(Expected,mc6309:cmp_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												New_Pos
											),?PRINT).

%%-----------------------------------------------------------------------------
cmp_generic_part_2_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1
	Data 			= <<0,1>>,

	Memory_Data 	= <<1>>,

	New_Pos 		= <<2:?SIZE_ADDRESS>>,

	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,

	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<1:?SIZE_A>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<1:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	
	tester(Expected,mc6309:cmp_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												New_Pos
											),?PRINT).

%%-----------------------------------------------------------------------------
cmp_generic_part_3_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1
	Data 			= <<0,1>>,

	Memory_Data 	= <<1>>,

	New_Pos 		= <<2:?SIZE_ADDRESS>>,

	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,

	New_CPU_Data 	= mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	
	tester(Expected,mc6309:cmp_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Memory_Data,
												Get_Reg_Fun,
												New_Pos
											),?PRINT).

%%=============================================================================
%% cmpa_immediate_81(Pos,Data,CPU_Data)
%%=============================================================================
cmpa_immediate_81_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1
	Data 			= <<0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpa_immediate_81(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpb_immediate_c1(Pos,Data,CPU_Data)
%%=============================================================================
cmpb_immediate_c1_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1
	Data 			= <<0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpb_immediate_c1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpe_immediate_1181(Pos,Data,CPU_Data)
%%=============================================================================
cmpe_immediate_1181_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1
	Data 			= <<0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpe_immediate_1181(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpf_immediate_11c1(Pos,Data,CPU_Data)
%%=============================================================================
cmpf_immediate_11c1_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1
	Data 			= <<0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpf_immediate_11c1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpa_direct_91(Pos,Data,CPU_Data)
%%=============================================================================
cmpa_direct_91_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2
	Data 			= <<0,2,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpa_direct_91(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpb_direct_d1(Pos,Data,CPU_Data)
%%=============================================================================
cmpb_direct_d1_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2
	Data 			= <<0,2,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpb_direct_d1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpe_direct_1191(Pos,Data,CPU_Data)
%%=============================================================================
cmpe_direct_1191_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,3,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpe_direct_1191(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpf_direct_11d1(Pos,Data,CPU_Data)
%%=============================================================================
cmpf_direct_11d1_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,3,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpf_direct_11d1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpa_indexed_a1(Pos,Data,CPU_Data)
%%=============================================================================
cmpa_indexed_a1_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1             ,2
	Data 			= <<0,Post_Byte/bits,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>),
														?SET_X(<<2:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>),
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpa_indexed_a1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpb_indexed_e1(Pos,Data,CPU_Data)
%%=============================================================================
cmpb_indexed_e1_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1             ,2
	Data 			= <<0,Post_Byte/bits,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>),
														?SET_X(<<2:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>),
														?SET_X(<<2:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpb_indexed_e1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpe_indexed_11a1(Pos,Data,CPU_Data)
%%=============================================================================
cmpe_indexed_11a1_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2             ,3
	Data 			= <<0,0,Post_Byte/bits,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>),
														?SET_X(<<3:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>),
														?SET_X(<<3:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpe_indexed_11a1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpf_indexed_11e1(Pos,Data,CPU_Data)
%%=============================================================================
cmpf_indexed_11e1_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2             ,3
	Data 			= <<0,0,Post_Byte/bits,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>),
														?SET_X(<<3:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>),
														?SET_X(<<3:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpf_indexed_11e1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpa_extended_b1(Pos,Data,CPU_Data)
%%=============================================================================
cmpa_extended_b1_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3         ,4,5,6
	Data 			= <<0,Post_Byte/bits,0,6,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_A(<<5:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpa_extended_b1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpb_extended_f1(Pos,Data,CPU_Data)
%%=============================================================================
cmpb_extended_f1_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3         ,4,5,6
	Data 			= <<0,Post_Byte/bits,0,6,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_B(<<5:?SIZE_B>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpb_extended_f1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpe_extended_11b1(Pos,Data,CPU_Data)
%%=============================================================================
cmpe_extended_11b1_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4         ,5,6,7
	Data 			= <<0,0,Post_Byte/bits,0,7,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_E(<<5:?SIZE_E>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<5:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpe_extended_11b1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpf_extended_11f1(Pos,Data,CPU_Data)
%%=============================================================================
cmpf_extended_11f1_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4         ,5,6,7
	Data 			= <<0,0,Post_Byte/bits,0,7,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_F(<<5:?SIZE_F>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<5:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpf_extended_11f1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpd_immediate_0083(Pos,Data,CPU_Data)
%%=============================================================================
cmpd_immediate_0083_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpd_immediate_0083(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmps_immediate_018C(Pos,Data,CPU_Data)
%%=============================================================================
cmps_immediate_018C_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmps_immediate_018C(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpu_immediate_0183(Pos,Data,CPU_Data)
%%=============================================================================
cmpu_immediate_0183_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpu_immediate_0183(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpw_immediate_0081(Pos,Data,CPU_Data)
%%=============================================================================
cmpw_immediate_0081_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpw_immediate_0081(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpx_immediate_8c(Pos,Data,CPU_Data)
%%=============================================================================
cmpx_immediate_8c_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpx_immediate_8c(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpy_immediate_008c(Pos,Data,CPU_Data)
%%=============================================================================
cmpy_immediate_008c_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3
	Data 			= <<0,0,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpy_immediate_008c(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpd_direct_0093(Pos,Data,CPU_Data)
%%=============================================================================
cmpd_direct_0093_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4
	Data 			= <<0,0,3,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpd_direct_0093(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmps_direct_019C(Pos,Data,CPU_Data)
%%=============================================================================
cmps_direct_019C_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4
	Data 			= <<0,0,3,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmps_direct_019C(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpu_direct_0193(Pos,Data,CPU_Data)
%%=============================================================================
cmpu_direct_0193_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4
	Data 			= <<0,0,3,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpu_direct_0193(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpw_direct_0091(Pos,Data,CPU_Data)
%%=============================================================================
cmpw_direct_0091_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4
	Data 			= <<0,0,3,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpw_direct_0091(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpx_direct_9c(Pos,Data,CPU_Data)
%%=============================================================================
cmpx_direct_9c_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4
	Data 			= <<0,2,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpx_direct_9c(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpy_direct_009c(Pos,Data,CPU_Data)
%%=============================================================================
cmpy_direct_009c_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4
	Data 			= <<0,0,3,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpy_direct_009c(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpd_indexed_00a3(Pos,Data,CPU_Data)
%%=============================================================================
cmpd_indexed_00a3_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2             ,3,4
	Data 			= <<0,0,Post_Byte/bits,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>),
														?SET_X(<<3:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>),
														?SET_X(<<3:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpd_indexed_00a3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmps_indexed_01ac(Pos,Data,CPU_Data)
%%=============================================================================
cmps_indexed_01ac_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2             ,3,4
	Data 			= <<0,0,Post_Byte/bits,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>),
														?SET_X(<<3:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>),
														?SET_X(<<3:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmps_indexed_01ac(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpu_indexed_01a3(Pos,Data,CPU_Data)
%%=============================================================================
cmpu_indexed_01a3_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2             ,3,4
	Data 			= <<0,0,Post_Byte/bits,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>),
														?SET_X(<<3:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>),
														?SET_X(<<3:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpu_indexed_01a3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpw_indexed_00a1(Pos,Data,CPU_Data)
%%=============================================================================
cmpw_indexed_00a1_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2             ,3,4
	Data 			= <<0,0,Post_Byte/bits,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>),
														?SET_X(<<3:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>),
														?SET_X(<<3:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpw_indexed_00a1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpx_indexed_ac(Pos,Data,CPU_Data)
%%=============================================================================
cmpx_indexed_ac_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(y),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1             ,2,3,4
	Data 			= <<0,Post_Byte/bits,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>),
														?SET_Y(<<2:?SIZE_Y>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>),
														?SET_Y(<<2:?SIZE_Y>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<2:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpx_indexed_ac(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpy_indexed_00ac(Pos,Data,CPU_Data)
%%=============================================================================
cmpy_indexed_00ac_1_test() ->

	Post_Byte 		= mc6309:post_byte_indexed_no_offset_r_direct(x),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2             ,3,4
	Data 			= <<0,0,Post_Byte/bits,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>),
														?SET_X(<<3:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>),
														?SET_X(<<3:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<3:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpy_indexed_00ac(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpd_extended_00b3(Pos,Data,CPU_Data)
%%=============================================================================
cmpd_extended_00b3_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4         ,5,6,7
	Data 			= <<0,0,Post_Byte/bits,0,7,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_D(<<5:?SIZE_D>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<5:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpd_extended_00b3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmps_extended_01bc(Pos,Data,CPU_Data)
%%=============================================================================
cmps_extended_01bc_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4         ,5,6,7
	Data 			= <<0,0,Post_Byte/bits,0,7,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_S(<<5:?SIZE_S>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<5:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmps_extended_01bc(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpu_extended_01b3(Pos,Data,CPU_Data)
%%=============================================================================
cmpu_extended_01b3_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4         ,5,6,7
	Data 			= <<0,0,Post_Byte/bits,0,7,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_U(<<5:?SIZE_U>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<5:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpu_extended_01b3(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpw_extended_00b1(Pos,Data,CPU_Data)
%%=============================================================================
cmpw_extended_00b1_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4         ,5,6,7
	Data 			= <<0,0,Post_Byte/bits,0,7,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_W(<<5:?SIZE_W>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<5:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpw_extended_00b1(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpx_extended_bc(Pos,Data,CPU_Data)
%%=============================================================================
cmpx_extended_bc_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<4:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3         ,4,5,6,7
	Data 			= <<0,Post_Byte/bits,0,6,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_X(<<5:?SIZE_X>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<4:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpx_extended_bc(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpy_extended_00bc(Pos,Data,CPU_Data)
%%=============================================================================
cmpy_extended_00bc_1_test() ->

	Post_Byte 		= mc6309:post_byte_extended_16_address_indirect(<<5:?SIZE_ADDRESS>>),
	
	Pos 			= <<0:?SIZE_ADDRESS>>,

	%% index        	0,1,2,3,4         ,5,6,7
	Data 			= <<0,0,Post_Byte/bits,0,7,0,1>>,

	CPU_Data 		= mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>)
													]
												),
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_Y(<<5:?SIZE_Y>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>),
														?SET_PC(<<5:?SIZE_PC>>)
													]
												  )
					  },
	tester(Expected,mc6309:cmpy_extended_00bc(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% cmpr_immediate_1037(Pos,Data,CPU_Data)
%%=============================================================================
cmpr_immediate_1037_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2                                      ,3,4
	Data 		= <<0,0,?INTER_REG_BITS_X:4,?INTER_REG_BITS_Y:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_X(<<5:?SIZE_X>>),
													?SET_Y(<<5:?SIZE_Y>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<3:?SIZE_PC>>),
													?SET_X(<<5:?SIZE_X>>),
													?SET_Y(<<5:?SIZE_Y>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<1:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											  )
				  },
	
	tester(Expected,mc6309:cmpr_immediate_1037(Pos,Data,CPU_Data),?PRINT).

%%-----------------------------------------------------------------------------
cmpr_immediate_1037_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,

	%% index        0,1,2                                      ,3,4
	Data 		= <<0,0,?INTER_REG_BITS_X:4,?INTER_REG_BITS_Y:4,0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_X(<<1:?SIZE_X>>),
													?SET_Y(<<5:?SIZE_Y>>)
												]
											),
	Expected 	= {
					Data,
					mc6309:cpu_perform_actions(
												[
													?SET_PC(<<3:?SIZE_PC>>),
													?SET_X(<<1:?SIZE_X>>),
													?SET_Y(<<5:?SIZE_Y>>),
													?SET_CC_N(<<0:?SIZE_CC_N>>),
													?SET_CC_Z(<<0:?SIZE_CC_Z>>),
													?SET_CC_V(<<0:?SIZE_CC_V>>),
													?SET_CC_C(<<1:?SIZE_CC_C>>)
												]
											  )
				  },
	
	tester(Expected,mc6309:cmpr_immediate_1037(Pos,Data,CPU_Data),?PRINT).

%%=============================================================================
%% com_generic_part(
%						Pos,
%						Data,
%						New_CPU_Data,
%						Get_Reg_Fun,
%						Set_Reg_Fun,
%						New_Pos
%					)
%%=============================================================================
com_generic_part_1_test() ->

	Pos 			= <<0:?SIZE_ADDRESS>>,
	Data 			= <<0>>,
	New_CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Get_Reg_Fun 	= fun mc6309:cpu_get_a/1,
	Set_Reg_Fun 	= fun mc6309:cpu_set_a/2,
	New_Pos 		= <<1:?SIZE_ADDRESS>>,
	Expected 		= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<1:?SIZE_PC>>),
														?SET_A(<<2#00000000:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					  },
	tester(Expected,mc6309:com_generic_part(
												Pos,
												Data,
												New_CPU_Data,
												Get_Reg_Fun,
												Set_Reg_Fun,
												New_Pos
											),?PRINT).

%%=============================================================================
% coma_inherent_43(Pos, Data, CPU_Data)
%%=============================================================================
coma_inherent_43_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<1:?SIZE_PC>>),
														?SET_A(<<2#00000000:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:coma_inherent_43(Pos, Data, CPU_Data), ?PRINT).

%%-----------------------------------------------------------------------------
coma_inherent_43_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_A(<<2#00000000:?SIZE_A>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<1:?SIZE_PC>>),
														?SET_A(<<2#11111111:?SIZE_A>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:coma_inherent_43(Pos, Data, CPU_Data), ?PRINT).

%%=============================================================================
% comb_inherent_53(Pos, Data, CPU_Data)
%%=============================================================================
comb_inherent_53_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#11111111:?SIZE_A>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<1:?SIZE_PC>>),
														?SET_B(<<2#00000000:?SIZE_A>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comb_inherent_53(Pos, Data, CPU_Data), ?PRINT).

%%-----------------------------------------------------------------------------
comb_inherent_53_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_B(<<2#00000000:?SIZE_A>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<1:?SIZE_PC>>),
														?SET_B(<<2#11111111:?SIZE_A>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comb_inherent_53(Pos, Data, CPU_Data), ?PRINT).

%%=============================================================================
% comd_inherent_1043(Pos, Data, CPU_Data)
%%=============================================================================
comd_inherent_1043_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<16#0:?SIZE_D>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_D(<<2#1111111111111111:?SIZE_D>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comd_inherent_1043(Pos, Data, CPU_Data), ?PRINT).

%%-----------------------------------------------------------------------------
comd_inherent_1043_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_D(<<2#1111111111111111:?SIZE_D>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_D(<<16#0:?SIZE_D>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comd_inherent_1043(Pos, Data, CPU_Data), ?PRINT).

%%=============================================================================
% come_inherent_1143(Pos,Data,CPU_Data)
%%=============================================================================
come_inherent_1143_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_E(<<16#0:?SIZE_E>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_E(<<2#11111111:?SIZE_E>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:come_inherent_1143(Pos, Data, CPU_Data), ?PRINT).

%%-----------------------------------------------------------------------------
come_inherent_1143_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_E(<<2#11111111:?SIZE_E>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_E(<<16#0:?SIZE_E>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:come_inherent_1143(Pos, Data, CPU_Data), ?PRINT).

%%=============================================================================
% comf_inherent_1153(Pos,Data,CPU_Data)
%%=============================================================================
comf_inherent_1153_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_F(<<16#0:?SIZE_F>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_F(<<2#11111111:?SIZE_F>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comf_inherent_1153(Pos, Data, CPU_Data), ?PRINT).

%%-----------------------------------------------------------------------------
comf_inherent_1153_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_F(<<2#11111111:?SIZE_F>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_F(<<16#0:?SIZE_F>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comf_inherent_1153(Pos, Data, CPU_Data), ?PRINT).

%%=============================================================================
% comw_inherent_1053(Pos, Data, CPU_Data)
%%=============================================================================
comw_inherent_1053_1_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_W(<<16#0:?SIZE_W>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_W(<<2#1111111111111111:?SIZE_W>>),
														?SET_CC_N(<<1:?SIZE_CC_N>>),
														?SET_CC_Z(<<0:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comw_inherent_1053(Pos, Data, CPU_Data), ?PRINT).

%%-----------------------------------------------------------------------------
comw_inherent_1053_2_test() ->

	Pos 		= <<0:?SIZE_ADDRESS>>,
	Data 		= <<0>>,
	CPU_Data 	= mc6309:cpu_perform_actions(
												[
													?SET_W(<<2#1111111111111111:?SIZE_W>>)
												]
											),
	Expected 	= {
						Data,
						mc6309:cpu_perform_actions(
													[
														?SET_PC(<<2:?SIZE_PC>>),
														?SET_W(<<16#0:?SIZE_W>>),
														?SET_CC_N(<<0:?SIZE_CC_N>>),
														?SET_CC_Z(<<1:?SIZE_CC_Z>>),
														?SET_CC_V(<<0:?SIZE_CC_V>>),
														?SET_CC_C(<<1:?SIZE_CC_C>>)
													]
												  )
					},
	tester(Expected, mc6309:comw_inherent_1053(Pos, Data, CPU_Data), ?PRINT).